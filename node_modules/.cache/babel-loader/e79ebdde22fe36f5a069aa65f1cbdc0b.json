{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\81806\\\\Documents\\\\work\\\\GIS_APP\\\\gis_app1\\\\src\\\\DrawMap.js\";\nimport './App.css';\nimport \"https://unpkg.com/elm-pep@1.0.6/dist/elm-pep.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport Tile from 'ol/layer/Tile';\nimport Vector from 'ol/layer/Vector';\nimport { fromLonLat } from 'ol/proj';\nimport Stroke from 'ol/style/Stroke';\nimport interaction from 'ol/interaction';\nimport Draw from 'ol/interaction/Draw';\nimport Source from 'ol/source';\nimport OSM from \"ol/source/OSM\";\nimport Style from 'ol/style/Style';\nimport Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DrawMap extends React.Component {\n  componentDidMount() {\n    const source = new Vector({\n      wrapX: false\n    });\n    this.polygonBase = new Vector({\n      source\n    });\n    this.context.map.addLayer(this.polygonBase);\n\n    const styleFunction = feature => {\n      var geometry = feature.getGeometry();\n      console.log('geometry', geometry.getType());\n\n      if (geometry.getType() === 'LineString') {\n        var styles = [new Style({\n          stroke: new Stroke({\n            color: 'rgba(255, 102, 0, 1)',\n            width: 3\n          })\n        })];\n        return styles;\n      }\n\n      if (geometry.getType() === 'Point') {\n        var styles = [new Style({\n          image: new Circle({\n            radius: 5,\n            stroke: new Stroke({\n              color: 'rgba(255, 0, 0, 1)'\n            }),\n            fill: new Fill({\n              color: 'rgba(255, 0, 0, 0.5)'\n            })\n          })\n        })];\n        return styles;\n      }\n\n      if (geometry.getType() === 'Polygon') {\n        var styles = [new Style({\n          stroke: new Stroke({\n            color: 'rgba(255, 102, 0, 0)',\n            width: 3\n          }),\n          fill: new Fill({\n            color: 'rgba(255, 102, 0, 0.3)'\n          })\n        })];\n        return styles;\n      }\n\n      return false;\n    }; // Define the polygon draw interaction\n\n\n    this.draw = new Draw({\n      source: source,\n      type: 'Polygon',\n      style: styleFunction\n    }); // Add the draw interaction\n\n    this.context.map.addInteraction(this.draw);\n    this.draw.on('drawstart', event => {\n      this.polygonFirstCoordinate = event.feature.getGeometry().getFirstCoordinate();\n    });\n  }\n\n  componentWillUnmount() {\n    this.context.map.removeInteraction(this.draw);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drawing polygon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }, this);\n  }\n\n}\n\nDrawMap.contextTypes = {\n  map: PropTypes.object\n};","map":{"version":3,"names":["React","ReactDOM","PropTypes","Map","View","Tile","Vector","fromLonLat","Stroke","interaction","Draw","Source","OSM","Style","Circle","Fill","DrawMap","Component","componentDidMount","source","wrapX","polygonBase","context","map","addLayer","styleFunction","feature","geometry","getGeometry","console","log","getType","styles","stroke","color","width","image","radius","fill","draw","type","style","addInteraction","on","event","polygonFirstCoordinate","getFirstCoordinate","componentWillUnmount","removeInteraction","render","contextTypes","object"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/src/DrawMap.js"],"sourcesContent":["import './App.css';\r\nimport \"https://unpkg.com/elm-pep@1.0.6/dist/elm-pep.js\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport PropTypes from 'prop-types';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport Tile from 'ol/layer/Tile';\r\nimport Vector from 'ol/layer/Vector';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport Stroke from 'ol/style/Stroke';\r\nimport interaction from 'ol/interaction';\r\nimport Draw from 'ol/interaction/Draw';\r\nimport Source from 'ol/source';\r\nimport OSM from \"ol/source/OSM\";\r\nimport Style from 'ol/style/Style';\r\nimport Circle from 'ol/style/Circle';\r\nimport Fill from 'ol/style/Fill';\r\n\r\n\r\n\r\n\r\n\r\nclass DrawMap extends React.Component {\r\n    static contextTypes = {\r\n      map: PropTypes.object\r\n    }\r\n  \r\n    componentDidMount() {\r\n        const source = new Vector({wrapX: false});\r\n      this.polygonBase = new Vector({ source });\r\n      this.context.map.addLayer(this.polygonBase);\r\n          \r\n          const styleFunction = feature => {\r\n        var geometry = feature.getGeometry();\r\n        console.log('geometry', geometry.getType());\r\n        if (geometry.getType() === 'LineString') {\r\n          var styles = [\r\n            new Style({\r\n              stroke: new Stroke({\r\n                color: 'rgba(255, 102, 0, 1)',\r\n                width: 3\r\n              })\r\n            })\r\n          ];\r\n          return styles;\r\n        }\r\n              if (geometry.getType() === 'Point') {\r\n          var styles = [\r\n            new Style({\r\n                          image: new Circle({\r\n                    radius: 5,\r\n                    stroke: new Stroke({ color: 'rgba(255, 0, 0, 1)' }),\r\n                    fill: new Fill({ color: 'rgba(255, 0, 0, 0.5)' })\r\n                          })\r\n            })\r\n          ];\r\n          return styles;\r\n        }\r\n        if (geometry.getType() === 'Polygon') {\r\n          var styles = [\r\n            new Style({\r\n              stroke: new Stroke({\r\n                color: 'rgba(255, 102, 0, 0)',\r\n                width: 3\r\n              }),\r\n              fill: new Fill({\r\n                color: 'rgba(255, 102, 0, 0.3)'\r\n              })\r\n            })\r\n          ];\r\n          return styles;\r\n        }\r\n        return false;\r\n      };\r\n      \r\n      // Define the polygon draw interaction\r\n      this.draw = new Draw({\r\n        source: source,\r\n        type: 'Polygon',\r\n              style: styleFunction\r\n      });\r\n      // Add the draw interaction\r\n      this.context.map.addInteraction(this.draw);\r\n          \r\n          this.draw.on('drawstart', event => {\r\n              this.polygonFirstCoordinate = event.feature.getGeometry().getFirstCoordinate();\r\n          });\r\n    }\r\n  \r\n    componentWillUnmount () {\r\n      this.context.map.removeInteraction(this.draw);\r\n    }\r\n  \r\n    render() { return <p>Drawing polygon</p>; }\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}