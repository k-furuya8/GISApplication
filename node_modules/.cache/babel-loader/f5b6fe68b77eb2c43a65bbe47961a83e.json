{"ast":null,"code":"import BaseDecoder from './basedecoder.js';\n/**\n * class WebImageDecoder\n *\n * This decoder uses the browsers image decoding facilities to read image\n * formats like WebP when supported.\n */\n\nexport default class WebImageDecoder extends BaseDecoder {\n  constructor() {\n    super();\n\n    if (typeof createImageBitmap === 'undefined') {\n      throw new Error('Cannot decode WebImage as `createImageBitmap` is not available');\n    } else if (typeof document === 'undefined' && typeof OffscreenCanvas === 'undefined') {\n      throw new Error('Cannot decode WebImage as neither `document` nor `OffscreenCanvas` is not available');\n    }\n  }\n\n  async decode(fileDirectory, buffer) {\n    const blob = new Blob([buffer]);\n    const imageBitmap = await createImageBitmap(blob);\n    let canvas;\n\n    if (typeof document !== 'undefined') {\n      canvas = document.createElement('canvas');\n      canvas.width = imageBitmap.width;\n      canvas.height = imageBitmap.height;\n    } else {\n      canvas = new OffscreenCanvas(imageBitmap.width, imageBitmap.height);\n    }\n\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(imageBitmap, 0, 0); // TODO: check how many samples per pixel we have, and return RGB/RGBA accordingly\n    // it seems like GDAL always encodes via RGBA which does not require a translation\n\n    return ctx.getImageData(0, 0, imageBitmap.width, imageBitmap.height).data.buffer;\n  }\n\n}","map":{"version":3,"names":["BaseDecoder","WebImageDecoder","constructor","createImageBitmap","Error","document","OffscreenCanvas","decode","fileDirectory","buffer","blob","Blob","imageBitmap","canvas","createElement","width","height","ctx","getContext","drawImage","getImageData","data"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/geotiff/dist-module/compression/webimage.js"],"sourcesContent":["import BaseDecoder from './basedecoder.js';\n\n/**\n * class WebImageDecoder\n *\n * This decoder uses the browsers image decoding facilities to read image\n * formats like WebP when supported.\n */\nexport default class WebImageDecoder extends BaseDecoder {\n  constructor() {\n    super();\n    if (typeof createImageBitmap === 'undefined') {\n      throw new Error('Cannot decode WebImage as `createImageBitmap` is not available');\n    } else if (typeof document === 'undefined' && typeof OffscreenCanvas === 'undefined') {\n      throw new Error('Cannot decode WebImage as neither `document` nor `OffscreenCanvas` is not available');\n    }\n  }\n\n  async decode(fileDirectory, buffer) {\n    const blob = new Blob([buffer]);\n    const imageBitmap = await createImageBitmap(blob);\n\n    let canvas;\n    if (typeof document !== 'undefined') {\n      canvas = document.createElement('canvas');\n      canvas.width = imageBitmap.width;\n      canvas.height = imageBitmap.height;\n    } else {\n      canvas = new OffscreenCanvas(imageBitmap.width, imageBitmap.height);\n    }\n\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(imageBitmap, 0, 0);\n\n    // TODO: check how many samples per pixel we have, and return RGB/RGBA accordingly\n    // it seems like GDAL always encodes via RGBA which does not require a translation\n\n    return ctx.getImageData(0, 0, imageBitmap.width, imageBitmap.height).data.buffer;\n  }\n}\n"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,kBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,eAAN,SAA8BD,WAA9B,CAA0C;EACvDE,WAAW,GAAG;IACZ;;IACA,IAAI,OAAOC,iBAAP,KAA6B,WAAjC,EAA8C;MAC5C,MAAM,IAAIC,KAAJ,CAAU,gEAAV,CAAN;IACD,CAFD,MAEO,IAAI,OAAOC,QAAP,KAAoB,WAApB,IAAmC,OAAOC,eAAP,KAA2B,WAAlE,EAA+E;MACpF,MAAM,IAAIF,KAAJ,CAAU,qFAAV,CAAN;IACD;EACF;;EAEW,MAANG,MAAM,CAACC,aAAD,EAAgBC,MAAhB,EAAwB;IAClC,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,MAAD,CAAT,CAAb;IACA,MAAMG,WAAW,GAAG,MAAMT,iBAAiB,CAACO,IAAD,CAA3C;IAEA,IAAIG,MAAJ;;IACA,IAAI,OAAOR,QAAP,KAAoB,WAAxB,EAAqC;MACnCQ,MAAM,GAAGR,QAAQ,CAACS,aAAT,CAAuB,QAAvB,CAAT;MACAD,MAAM,CAACE,KAAP,GAAeH,WAAW,CAACG,KAA3B;MACAF,MAAM,CAACG,MAAP,GAAgBJ,WAAW,CAACI,MAA5B;IACD,CAJD,MAIO;MACLH,MAAM,GAAG,IAAIP,eAAJ,CAAoBM,WAAW,CAACG,KAAhC,EAAuCH,WAAW,CAACI,MAAnD,CAAT;IACD;;IAED,MAAMC,GAAG,GAAGJ,MAAM,CAACK,UAAP,CAAkB,IAAlB,CAAZ;IACAD,GAAG,CAACE,SAAJ,CAAcP,WAAd,EAA2B,CAA3B,EAA8B,CAA9B,EAdkC,CAgBlC;IACA;;IAEA,OAAOK,GAAG,CAACG,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuBR,WAAW,CAACG,KAAnC,EAA0CH,WAAW,CAACI,MAAtD,EAA8DK,IAA9D,CAAmEZ,MAA1E;EACD;;AA9BsD"},"metadata":{},"sourceType":"module"}