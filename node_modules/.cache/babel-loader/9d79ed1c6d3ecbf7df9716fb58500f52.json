{"ast":null,"code":"export class BaseResponse {\n  /**\n   * Returns whether the response has an ok'ish status code\n   */\n  get ok() {\n    return this.status >= 200 && this.status <= 299;\n  }\n  /**\n   * Returns the status code of the response\n   */\n\n\n  get status() {\n    throw new Error('not implemented');\n  }\n  /**\n   * Returns the value of the specified header\n   * @param {string} headerName the header name\n   * @returns {string} the header value\n   */\n\n\n  getHeader(headerName) {\n    // eslint-disable-line no-unused-vars\n    throw new Error('not implemented');\n  }\n  /**\n   * @returns {ArrayBuffer} the response data of the request\n   */\n\n\n  async getData() {\n    throw new Error('not implemented');\n  }\n\n}\nexport class BaseClient {\n  constructor(url) {\n    this.url = url;\n  }\n  /**\n   * Send a request with the options\n   * @param {object} [options]\n   */\n\n\n  async request() {\n    let {\n      headers,\n      credentials,\n      signal\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // eslint-disable-line no-unused-vars\n    throw new Error('request is not implemented');\n  }\n\n}","map":{"version":3,"names":["BaseResponse","ok","status","Error","getHeader","headerName","getData","BaseClient","constructor","url","request","headers","credentials","signal"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/geotiff/dist-module/source/client/base.js"],"sourcesContent":["export class BaseResponse {\n  /**\n   * Returns whether the response has an ok'ish status code\n   */\n  get ok() {\n    return this.status >= 200 && this.status <= 299;\n  }\n\n  /**\n   * Returns the status code of the response\n   */\n  get status() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * Returns the value of the specified header\n   * @param {string} headerName the header name\n   * @returns {string} the header value\n   */\n  getHeader(headerName) { // eslint-disable-line no-unused-vars\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @returns {ArrayBuffer} the response data of the request\n   */\n  async getData() {\n    throw new Error('not implemented');\n  }\n}\n\nexport class BaseClient {\n  constructor(url) {\n    this.url = url;\n  }\n\n  /**\n   * Send a request with the options\n   * @param {object} [options]\n   */\n  async request({ headers, credentials, signal } = {}) { // eslint-disable-line no-unused-vars\n    throw new Error('request is not implemented');\n  }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,YAAN,CAAmB;EACxB;AACF;AACA;EACQ,IAAFC,EAAE,GAAG;IACP,OAAO,KAAKC,MAAL,IAAe,GAAf,IAAsB,KAAKA,MAAL,IAAe,GAA5C;EACD;EAED;AACF;AACA;;;EACY,IAANA,MAAM,GAAG;IACX,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEC,SAAS,CAACC,UAAD,EAAa;IAAE;IACtB,MAAM,IAAIF,KAAJ,CAAU,iBAAV,CAAN;EACD;EAED;AACF;AACA;;;EACe,MAAPG,OAAO,GAAG;IACd,MAAM,IAAIH,KAAJ,CAAU,iBAAV,CAAN;EACD;;AA7BuB;AAgC1B,OAAO,MAAMI,UAAN,CAAiB;EACtBC,WAAW,CAACC,GAAD,EAAM;IACf,KAAKA,GAAL,GAAWA,GAAX;EACD;EAED;AACF;AACA;AACA;;;EACe,MAAPC,OAAO,GAAwC;IAAA,IAAvC;MAAEC,OAAF;MAAWC,WAAX;MAAwBC;IAAxB,CAAuC,uEAAJ,EAAI;IAAE;IACrD,MAAM,IAAIV,KAAJ,CAAU,4BAAV,CAAN;EACD;;AAXqB"},"metadata":{},"sourceType":"module"}