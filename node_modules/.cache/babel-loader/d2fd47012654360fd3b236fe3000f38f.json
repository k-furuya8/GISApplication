{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\81806\\\\Documents\\\\work\\\\GIS_APP\\\\gis_app1\\\\src\\\\index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport './App.css';\nimport \"https://unpkg.com/elm-pep@1.0.6/dist/elm-pep.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport Tile from 'ol/layer/Tile';\nimport Vector from 'ol/layer/Vector';\nimport { fromLonLat } from 'ol/proj';\nimport Stroke from 'ol/style/Stroke';\nimport interaction from 'ol/interaction';\nimport Draw from 'ol/interaction/Draw';\nimport Source from 'ol/source';\nimport OSM from \"ol/source/OSM\";\nimport Style from 'ol/style/Style';\nimport Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.clear();\n\nconst App = () => /*#__PURE__*/_jsxDEV(MapApp, {\n  children: /*#__PURE__*/_jsxDEV(Polygon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 27\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 19\n}, this);\n\n_c = App;\n\nclass MapApp extends React.Component {\n  constructor(props) {\n    super(props); // Define base layer\n\n    this.baseLayer = new Tile({\n      source: new OSM()\n    }); // Define base view\n\n    this.baseView = new View({\n      center: fromLonLat([37.41, 8.82]),\n      zoom: 4\n    }); // Add map, base view and layer\n\n    this.map = new Map({\n      layers: [this.baseLayer],\n      view: this.baseView\n    });\n  }\n\n  getChildContext() {\n    return {\n      map: this.map\n    };\n  }\n\n  componentDidMount() {\n    // set map target element\n    this.map.setTarget(this.map);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: \"map\",\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nMapApp.childContextTypes = {\n  map: PropTypes.object\n};\n\nclass Polygon extends React.Component {\n  componentDidMount() {\n    const source = new Vector({\n      wrapX: false\n    });\n    this.polygonBase = new Vector({\n      source\n    });\n    this.context.map.addLayer(this.polygonBase);\n\n    const styleFunction = feature => {\n      var geometry = feature.getGeometry();\n      console.log('geometry', geometry.getType());\n\n      if (geometry.getType() === 'LineString') {\n        var styles = [new Style({\n          stroke: new Stroke({\n            color: 'rgba(255, 102, 0, 1)',\n            width: 3\n          })\n        })];\n        return styles;\n      }\n\n      if (geometry.getType() === 'Point') {\n        var styles = [new Style({\n          image: new Circle({\n            radius: 5,\n            stroke: new Stroke({\n              color: 'rgba(255, 0, 0, 1)'\n            }),\n            fill: new Fill({\n              color: 'rgba(255, 0, 0, 0.5)'\n            })\n          })\n        })];\n        return styles;\n      }\n\n      if (geometry.getType() === 'Polygon') {\n        var styles = [new Style({\n          stroke: new Stroke({\n            color: 'rgba(255, 102, 0, 0)',\n            width: 3\n          }),\n          fill: new Fill({\n            color: 'rgba(255, 102, 0, 0.3)'\n          })\n        })];\n        return styles;\n      }\n\n      return false;\n    }; // Define the polygon draw interaction\n\n\n    this.draw = new Draw({\n      source: source,\n      type: 'Polygon',\n      style: styleFunction\n    }); // Add the draw interaction\n\n    this.context.map.addInteraction(this.draw);\n    this.draw.on('drawstart', event => {\n      this.polygonFirstCoordinate = event.feature.getGeometry().getFirstCoordinate();\n    });\n  }\n\n  componentWillUnmount() {\n    this.context.map.removeInteraction(this.draw);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drawing polygon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nPolygon.contextTypes = {\n  map: PropTypes.object\n};\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 157,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","PropTypes","Map","View","Tile","Vector","fromLonLat","Stroke","interaction","Draw","Source","OSM","Style","Circle","Fill","console","clear","App","MapApp","Component","constructor","props","baseLayer","source","baseView","center","zoom","map","layers","view","getChildContext","componentDidMount","setTarget","render","children","childContextTypes","object","Polygon","wrapX","polygonBase","context","addLayer","styleFunction","feature","geometry","getGeometry","log","getType","styles","stroke","color","width","image","radius","fill","draw","type","style","addInteraction","on","event","polygonFirstCoordinate","getFirstCoordinate","componentWillUnmount","removeInteraction","contextTypes","document","getElementById"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/src/index.js"],"sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport './App.css';\nimport \"https://unpkg.com/elm-pep@1.0.6/dist/elm-pep.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport Tile from 'ol/layer/Tile';\nimport Vector from 'ol/layer/Vector';\nimport { fromLonLat } from 'ol/proj';\nimport Stroke from 'ol/style/Stroke';\nimport interaction from 'ol/interaction';\nimport Draw from 'ol/interaction/Draw';\nimport Source from 'ol/source';\nimport OSM from \"ol/source/OSM\";\nimport Style from 'ol/style/Style';\nimport Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\n\nconsole.clear();\nconst App = () => <MapApp><Polygon /></MapApp>;\n\nclass MapApp extends React.Component {\n\tconstructor(props) {\n    super(props);\n\n\t\t// Define base layer\n  \tthis.baseLayer = new Tile({ source: new OSM() });\n    \n  \t// Define base view\n    this.baseView = new View({\n      center: fromLonLat([37.41, 8.82]),\n      zoom: 4\n    });\n\n\t\t// Add map, base view and layer\n    this.map = new Map({\n      layers: [this.baseLayer],\n      view: this.baseView\n    });\n  }\n  \n\tstatic childContextTypes = {\n  \tmap: PropTypes.object\n  }\n  \n  getChildContext() {\n  \treturn {\n      map: this.map\n    }\n  }\n  \n  componentDidMount() {\n    // set map target element\n    this.map.setTarget(this.map);\n  }\n\t\n  render() {\n  \treturn <div ref=\"map\">\n      {this.props.children}\n    </div>;\n  }\n}\n\nclass Polygon extends React.Component {\n  static contextTypes = {\n    map: PropTypes.object\n  }\n\n  componentDidMount() {\n  \tconst source = new Vector({wrapX: false});\n    this.polygonBase = new Vector({ source });\n    this.context.map.addLayer(this.polygonBase);\n\t\t\n\t\tconst styleFunction = feature => {\n      var geometry = feature.getGeometry();\n      console.log('geometry', geometry.getType());\n      if (geometry.getType() === 'LineString') {\n        var styles = [\n          new Style({\n            stroke: new Stroke({\n              color: 'rgba(255, 102, 0, 1)',\n              width: 3\n            })\n          })\n        ];\n        return styles;\n      }\n\t\t\tif (geometry.getType() === 'Point') {\n        var styles = [\n          new Style({\n\t\t\t\t\t\timage: new Circle({\n      \t    \tradius: 5,\n      \t    \tstroke: new Stroke({ color: 'rgba(255, 0, 0, 1)' }),\n      \t    \tfill: new Fill({ color: 'rgba(255, 0, 0, 0.5)' })\n\t\t\t\t\t\t})\n          })\n        ];\n        return styles;\n      }\n      if (geometry.getType() === 'Polygon') {\n        var styles = [\n          new Style({\n            stroke: new Stroke({\n              color: 'rgba(255, 102, 0, 0)',\n              width: 3\n            }),\n            fill: new Fill({\n              color: 'rgba(255, 102, 0, 0.3)'\n            })\n          })\n        ];\n        return styles;\n      }\n      return false;\n    };\n    \n    // Define the polygon draw interaction\n    this.draw = new Draw({\n      source: source,\n      type: 'Polygon',\n\t\t\tstyle: styleFunction\n    });\n    // Add the draw interaction\n    this.context.map.addInteraction(this.draw);\n\t\t\n\t\tthis.draw.on('drawstart', event => {\n\t\t\tthis.polygonFirstCoordinate = event.feature.getGeometry().getFirstCoordinate();\n\t\t});\n  }\n\n  componentWillUnmount () {\n    this.context.map.removeInteraction(this.draw);\n  }\n\n  render() { return <p>Drawing polygon</p>; }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"mappings":"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"},"metadata":{},"sourceType":"module"}