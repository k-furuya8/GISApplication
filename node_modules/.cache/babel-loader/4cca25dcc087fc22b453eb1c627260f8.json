{"ast":null,"code":"/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\n\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\n\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n\n    this.selected = selected;\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n\n    this.deselected = deselected;\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n\n}\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\n\nconst originalFeatureStyles = {};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\n\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    this.on;\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n\n    this.once;\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n\n    this.un;\n    options = options ? options : {};\n    /**\n     * @private\n     */\n\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n    /**\n     * @private\n     */\n\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.condition_ = options.condition ? options.condition : singleClick;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.multi_ = options.multi ? options.multi : false;\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n\n    this.filter_ = options.filter ? options.filter : TRUE;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n\n    this.style_ = options.style !== undefined ? options.style : getDefaultStyleFunction();\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n\n    this.features_ = options.features || new Collection();\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n\n    let layerFilter;\n\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n\n\n    this.layerFilter_ = layerFilter;\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n\n    this.featureLayerAssociation_ = {};\n  }\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n\n\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n\n\n  getFeatures() {\n    return this.features_;\n  }\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n\n\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n\n\n  getLayer(feature) {\n    return (\n      /** @type {import('../layer/Vector.js').default} */\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n\n\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n\n\n  setMap(map) {\n    const currentMap = this.getMap();\n\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n\n    super.setMap(map);\n\n    if (map) {\n      this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n      this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n    }\n  }\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n\n\n  addFeature_(evt) {\n    const feature = evt.element;\n\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n\n    if (!this.getLayer(feature)) {\n      const layer =\n      /** @type {VectorLayer} */\n      this.getMap().getAllLayers().find(function (layer) {\n        if (layer instanceof VectorLayer && layer.getSource() && layer.getSource().hasFeature(feature)) {\n          return layer;\n        }\n      });\n\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n\n\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n\n\n  getStyle() {\n    return this.style_;\n  }\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n\n\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n\n    feature.setStyle(this.style_);\n  }\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n\n\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n\n      if (interaction !== this && interaction instanceof Select && interaction.getStyle() && interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n\n\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n\n\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n    /**\n     * @type {Array<Feature>}\n     */\n\n    const deselected = [];\n    /**\n     * @type {Array<Feature>}\n     */\n\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      function (feature, layer) {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return;\n        }\n\n        this.addFeatureLayerAssociation_(feature, layer);\n        selected.push(feature);\n        return !this.multi_;\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      /**\n       * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n       * @param {import(\"../layer/Layer.js\").default} layer Layer.\n       * @return {boolean|undefined} Continue to iterate over the features.\n       */\n      function (feature, layer) {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return;\n        }\n\n        if ((add || toggle) && !features.getArray().includes(feature)) {\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n        } else if ((remove || toggle) && features.getArray().includes(feature)) {\n          deselected.push(feature);\n          this.removeFeatureLayerAssociation_(feature);\n        }\n\n        return !this.multi_;\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n\n      features.extend(selected);\n    }\n\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n\n    return true;\n  }\n\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\n\n\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;","map":{"version":3,"names":["Collection","CollectionEventType","Event","Feature","Interaction","VectorLayer","TRUE","clear","createEditingStyle","extend","getUid","never","shiftKeyOnly","singleClick","SelectEventType","SELECT","SelectEvent","constructor","type","selected","deselected","mapBrowserEvent","originalFeatureStyles","Select","options","on","once","un","boundAddFeature_","addFeature_","bind","boundRemoveFeature_","removeFeature_","condition_","condition","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","style_","style","undefined","getDefaultStyleFunction","features_","features","layerFilter","layers","layer","includes","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","feature","getFeatures","getHitTolerance","getLayer","setHitTolerance","setMap","map","currentMap","getMap","forEach","restorePreviousStyle_","addEventListener","ADD","REMOVE","applySelectedStyle_","removeEventListener","evt","element","getAllLayers","find","getSource","hasFeature","getStyle","key","setStyle","interactions","getInteractions","getArray","i","length","interaction","lastIndexOf","removeFeatureLayerAssociation_","handleEvent","add","remove","toggle","set","forEachFeatureAtPixel","pixel","push","getLength","item","index","indexOf","splice","j","dispatchEvent","styles","getGeometry","getType"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/ol/interaction/Select.js"],"sourcesContent":["/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,KAAR,QAAoB,WAApB;AACA,SAAQC,kBAAR,QAAiC,mBAAjC;AACA,SAAQC,MAAR,QAAqB,aAArB;AACA,SAAQC,MAAR,QAAqB,YAArB;AACA,SAAQC,KAAR,EAAeC,YAAf,EAA6BC,WAA7B,QAA+C,wBAA/C;AAEA;AACA;AACA;;AACA,MAAMC,eAAe,GAAG;EACtB;AACF;AACA;AACA;AACA;EACEC,MAAM,EAAE;AANc,CAAxB;AASA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAN,SAA0Bd,KAA1B,CAAgC;EACrC;AACF;AACA;AACA;AACA;AACA;AACA;EACEe,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiBC,UAAjB,EAA6BC,eAA7B,EAA8C;IACvD,MAAMH,IAAN;IAEA;AACJ;AACA;AACA;AACA;;IACI,KAAKC,QAAL,GAAgBA,QAAhB;IAEA;AACJ;AACA;AACA;AACA;;IACI,KAAKC,UAAL,GAAkBA,UAAlB;IAEA;AACJ;AACA;AACA;AACA;;IACI,KAAKC,eAAL,GAAuBA,eAAvB;EACD;;AA/BoC;AAkCvC;AACA;AACA;AACA;;AACA,MAAMC,qBAAqB,GAAG,EAA9B;AAEA;AACA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"},"metadata":{},"sourceType":"module"}