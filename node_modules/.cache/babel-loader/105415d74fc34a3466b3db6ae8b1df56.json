{"ast":null,"code":"/**\n * @module ol/source/ImageStatic\n */\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getHeight, getWidth, intersects } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\n\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    const\n    /** @type {import(\"../Image.js\").LoadFunction} */\n    imageLoadFunction = options.imageLoadFunction !== undefined ? options.imageLoadFunction : defaultImageLoadFunction;\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection)\n    });\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this.url_ = options.url;\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n\n    this.imageExtent_ = options.imageExtent;\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n\n    this.image_ = new ImageWrapper(this.imageExtent_, undefined, 1, this.url_, crossOrigin, imageLoadFunction);\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n    this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n  }\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n\n\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n\n\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n\n    return null;\n  }\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n\n\n  getUrl() {\n    return this.url_;\n  }\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n\n\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n\n        const canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n\n    super.handleImageChange(evt);\n  }\n\n}\n\nexport default Static;","map":{"version":3,"names":["EventType","ImageSource","defaultImageLoadFunction","ImageState","ImageWrapper","createCanvasContext2D","getHeight","getWidth","intersects","get","getProjection","Static","constructor","options","crossOrigin","undefined","imageLoadFunction","attributions","interpolate","projection","url_","url","imageExtent_","imageExtent","image_","imageSize_","imageSize","addEventListener","CHANGE","handleImageChange","bind","getImageExtent","getImageInternal","extent","resolution","pixelRatio","getExtent","getUrl","evt","getState","LOADED","image","getImage","imageWidth","imageHeight","width","height","extentWidth","extentHeight","xResolution","yResolution","targetWidth","targetHeight","Math","round","context","getInterpolate","imageSmoothingEnabled","canvas","drawImage","setImage"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/ol/source/ImageStatic.js"],"sourcesContent":["/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}