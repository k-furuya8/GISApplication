{"ast":null,"code":"/**\n * @module ol/style/IconImage\n */\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\n\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n    this.hitDetectionImage_ = null;\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n\n    this.image_ = image;\n    /**\n     * @private\n     * @type {string|null}\n     */\n\n    this.crossOrigin_ = crossOrigin;\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n\n    this.canvas_ = {};\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n\n    this.color_ = color;\n    /**\n     * @private\n     * @type {?function():void}\n     */\n\n    this.unlisten_ = null;\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n\n    this.imageState_ = imageState;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    this.size_ = size;\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n\n    this.src_ = src;\n    /**\n     * @private\n     */\n\n    this.tainted_;\n  }\n  /**\n   * @private\n   */\n\n\n  initializeImage_() {\n    this.image_ = new Image();\n\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n\n\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n\n      taintedTestContext.drawImage(this.image_, 0, 0);\n\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n\n    return this.tainted_ === true;\n  }\n  /**\n   * @private\n   */\n\n\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n  /**\n   * @private\n   */\n\n\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n  /**\n   * @private\n   */\n\n\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n\n\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n\n\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n\n\n  getImageState() {\n    return this.imageState_;\n  }\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n\n\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n\n    return this.hitDetectionImage_;\n  }\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n\n\n  getSize() {\n    return this.size_;\n  }\n  /**\n   * @return {string|undefined} Image src.\n   */\n\n\n  getSrc() {\n    return this.src_;\n  }\n  /**\n   * Load not yet loaded URI.\n   */\n\n\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n\n    try {\n      /** @type {HTMLImageElement} */\n      this.image_.src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n\n    this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n  }\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n\n\n  replaceColor_(pixelRatio) {\n    if (!this.color_ || this.canvas_[pixelRatio] || this.imageState_ !== ImageState.LOADED) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n    this.canvas_[pixelRatio] = canvas;\n  }\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n\n\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n}\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\n\n\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n\n  return iconImage;\n}\nexport default IconImage;","map":{"version":3,"names":["EventTarget","EventType","ImageState","asString","createCanvasContext2D","shared","iconImageCache","listenImage","taintedTestContext","IconImage","constructor","image","src","size","crossOrigin","imageState","color","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","unlisten_","imageState_","size_","src_","tainted_","initializeImage_","Image","isTainted_","undefined","LOADED","drawImage","getImageData","e","dispatchChangeEvent_","dispatchEvent","CHANGE","handleImageError_","ERROR","unlistenImage_","handleImageLoad_","width","height","getImage","pixelRatio","replaceColor_","getPixelRatio","getImageState","getHitDetectionImage","context","fillRect","canvas","getSize","getSrc","load","IDLE","LOADING","bind","document","createElement","Math","ceil","ctx","getContext","scale","globalCompositeOperation","fillStyle","get","iconImage","set"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/ol/style/IconImage.js"],"sourcesContent":["/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}