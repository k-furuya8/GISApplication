{"ast":null,"code":"import { BaseClient, BaseResponse } from './base.js';\n\nclass FetchResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for fetch API Response\n   * @param {Response} response\n   */\n  constructor(response) {\n    super();\n    this.response = response;\n  }\n\n  get status() {\n    return this.response.status;\n  }\n\n  getHeader(name) {\n    return this.response.headers.get(name);\n  }\n\n  async getData() {\n    const data = this.response.arrayBuffer ? await this.response.arrayBuffer() : (await this.response.buffer()).buffer;\n    return data;\n  }\n\n}\n\nexport class FetchClient extends BaseClient {\n  constructor(url, credentials) {\n    super(url);\n    this.credentials = credentials;\n  }\n\n  async request() {\n    let {\n      headers,\n      credentials,\n      signal\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const response = await fetch(this.url, {\n      headers,\n      credentials,\n      signal\n    });\n    return new FetchResponse(response);\n  }\n\n}","map":{"version":3,"names":["BaseClient","BaseResponse","FetchResponse","constructor","response","status","getHeader","name","headers","get","getData","data","arrayBuffer","buffer","FetchClient","url","credentials","request","signal","fetch"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/geotiff/dist-module/source/client/fetch.js"],"sourcesContent":["import { BaseClient, BaseResponse } from './base.js';\n\nclass FetchResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for fetch API Response\n   * @param {Response} response\n   */\n  constructor(response) {\n    super();\n    this.response = response;\n  }\n\n  get status() {\n    return this.response.status;\n  }\n\n  getHeader(name) {\n    return this.response.headers.get(name);\n  }\n\n  async getData() {\n    const data = this.response.arrayBuffer\n      ? await this.response.arrayBuffer()\n      : (await this.response.buffer()).buffer;\n    return data;\n  }\n}\n\nexport class FetchClient extends BaseClient {\n  constructor(url, credentials) {\n    super(url);\n    this.credentials = credentials;\n  }\n\n  async request({ headers, credentials, signal } = {}) {\n    const response = await fetch(this.url, {\n      headers, credentials, signal,\n    });\n    return new FetchResponse(response);\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;;AAEA,MAAMC,aAAN,SAA4BD,YAA5B,CAAyC;EACvC;AACF;AACA;AACA;EACEE,WAAW,CAACC,QAAD,EAAW;IACpB;IACA,KAAKA,QAAL,GAAgBA,QAAhB;EACD;;EAES,IAANC,MAAM,GAAG;IACX,OAAO,KAAKD,QAAL,CAAcC,MAArB;EACD;;EAEDC,SAAS,CAACC,IAAD,EAAO;IACd,OAAO,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,GAAtB,CAA0BF,IAA1B,CAAP;EACD;;EAEY,MAAPG,OAAO,GAAG;IACd,MAAMC,IAAI,GAAG,KAAKP,QAAL,CAAcQ,WAAd,GACT,MAAM,KAAKR,QAAL,CAAcQ,WAAd,EADG,GAET,CAAC,MAAM,KAAKR,QAAL,CAAcS,MAAd,EAAP,EAA+BA,MAFnC;IAGA,OAAOF,IAAP;EACD;;AAvBsC;;AA0BzC,OAAO,MAAMG,WAAN,SAA0Bd,UAA1B,CAAqC;EAC1CG,WAAW,CAACY,GAAD,EAAMC,WAAN,EAAmB;IAC5B,MAAMD,GAAN;IACA,KAAKC,WAAL,GAAmBA,WAAnB;EACD;;EAEY,MAAPC,OAAO,GAAwC;IAAA,IAAvC;MAAET,OAAF;MAAWQ,WAAX;MAAwBE;IAAxB,CAAuC,uEAAJ,EAAI;IACnD,MAAMd,QAAQ,GAAG,MAAMe,KAAK,CAAC,KAAKJ,GAAN,EAAW;MACrCP,OADqC;MAC5BQ,WAD4B;MACfE;IADe,CAAX,CAA5B;IAGA,OAAO,IAAIhB,aAAJ,CAAkBE,QAAlB,CAAP;EACD;;AAXyC"},"metadata":{},"sourceType":"module"}