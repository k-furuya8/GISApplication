{"ast":null,"code":"import { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass XHRResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for XMLHttpRequest\n   * @param {XMLHttpRequest} xhr\n   * @param {ArrayBuffer} data\n   */\n  constructor(xhr, data) {\n    super();\n    this.xhr = xhr;\n    this.data = data;\n  }\n\n  get status() {\n    return this.xhr.status;\n  }\n\n  getHeader(name) {\n    return this.xhr.getResponseHeader(name);\n  }\n\n  async getData() {\n    return this.data;\n  }\n\n}\n\nexport class XHRClient extends BaseClient {\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', this.url);\n      xhr.responseType = 'arraybuffer';\n\n      for (const [key, value] of Object.entries(headers)) {\n        xhr.setRequestHeader(key, value);\n      } // hook signals\n\n\n      xhr.onload = () => {\n        const data = xhr.response;\n        resolve(new XHRResponse(xhr, data));\n      };\n\n      xhr.onerror = reject;\n\n      xhr.onabort = () => reject(new AbortError('Request aborted'));\n\n      xhr.send();\n\n      if (signal) {\n        if (signal.aborted) {\n          xhr.abort();\n        }\n\n        signal.addEventListener('abort', () => xhr.abort());\n      }\n    });\n  }\n\n  async request() {\n    let {\n      headers,\n      signal\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n\n}","map":{"version":3,"names":["BaseClient","BaseResponse","AbortError","XHRResponse","constructor","xhr","data","status","getHeader","name","getResponseHeader","getData","XHRClient","constructRequest","headers","signal","Promise","resolve","reject","XMLHttpRequest","open","url","responseType","key","value","Object","entries","setRequestHeader","onload","response","onerror","onabort","send","aborted","abort","addEventListener","request"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/geotiff/dist-module/source/client/xhr.js"],"sourcesContent":["import { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass XHRResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for XMLHttpRequest\n   * @param {XMLHttpRequest} xhr\n   * @param {ArrayBuffer} data\n   */\n  constructor(xhr, data) {\n    super();\n    this.xhr = xhr;\n    this.data = data;\n  }\n\n  get status() {\n    return this.xhr.status;\n  }\n\n  getHeader(name) {\n    return this.xhr.getResponseHeader(name);\n  }\n\n  async getData() {\n    return this.data;\n  }\n}\n\nexport class XHRClient extends BaseClient {\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', this.url);\n      xhr.responseType = 'arraybuffer';\n      for (const [key, value] of Object.entries(headers)) {\n        xhr.setRequestHeader(key, value);\n      }\n\n      // hook signals\n      xhr.onload = () => {\n        const data = xhr.response;\n        resolve(new XHRResponse(xhr, data));\n      };\n      xhr.onerror = reject;\n      xhr.onabort = () => reject(new AbortError('Request aborted'));\n      xhr.send();\n\n      if (signal) {\n        if (signal.aborted) {\n          xhr.abort();\n        }\n        signal.addEventListener('abort', () => xhr.abort());\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;AACA,SAASC,UAAT,QAA2B,gBAA3B;;AAEA,MAAMC,WAAN,SAA0BF,YAA1B,CAAuC;EACrC;AACF;AACA;AACA;AACA;EACEG,WAAW,CAACC,GAAD,EAAMC,IAAN,EAAY;IACrB;IACA,KAAKD,GAAL,GAAWA,GAAX;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACD;;EAES,IAANC,MAAM,GAAG;IACX,OAAO,KAAKF,GAAL,CAASE,MAAhB;EACD;;EAEDC,SAAS,CAACC,IAAD,EAAO;IACd,OAAO,KAAKJ,GAAL,CAASK,iBAAT,CAA2BD,IAA3B,CAAP;EACD;;EAEY,MAAPE,OAAO,GAAG;IACd,OAAO,KAAKL,IAAZ;EACD;;AAtBoC;;AAyBvC,OAAO,MAAMM,SAAN,SAAwBZ,UAAxB,CAAmC;EACxCa,gBAAgB,CAACC,OAAD,EAAUC,MAAV,EAAkB;IAChC,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtC,MAAMb,GAAG,GAAG,IAAIc,cAAJ,EAAZ;MACAd,GAAG,CAACe,IAAJ,CAAS,KAAT,EAAgB,KAAKC,GAArB;MACAhB,GAAG,CAACiB,YAAJ,GAAmB,aAAnB;;MACA,KAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAeZ,OAAf,CAA3B,EAAoD;QAClDT,GAAG,CAACsB,gBAAJ,CAAqBJ,GAArB,EAA0BC,KAA1B;MACD,CANqC,CAQtC;;;MACAnB,GAAG,CAACuB,MAAJ,GAAa,MAAM;QACjB,MAAMtB,IAAI,GAAGD,GAAG,CAACwB,QAAjB;QACAZ,OAAO,CAAC,IAAId,WAAJ,CAAgBE,GAAhB,EAAqBC,IAArB,CAAD,CAAP;MACD,CAHD;;MAIAD,GAAG,CAACyB,OAAJ,GAAcZ,MAAd;;MACAb,GAAG,CAAC0B,OAAJ,GAAc,MAAMb,MAAM,CAAC,IAAIhB,UAAJ,CAAe,iBAAf,CAAD,CAA1B;;MACAG,GAAG,CAAC2B,IAAJ;;MAEA,IAAIjB,MAAJ,EAAY;QACV,IAAIA,MAAM,CAACkB,OAAX,EAAoB;UAClB5B,GAAG,CAAC6B,KAAJ;QACD;;QACDnB,MAAM,CAACoB,gBAAP,CAAwB,OAAxB,EAAiC,MAAM9B,GAAG,CAAC6B,KAAJ,EAAvC;MACD;IACF,CAvBM,CAAP;EAwBD;;EAEY,MAAPE,OAAO,GAA2B;IAAA,IAA1B;MAAEtB,OAAF;MAAWC;IAAX,CAA0B,uEAAJ,EAAI;IACtC,MAAMc,QAAQ,GAAG,MAAM,KAAKhB,gBAAL,CAAsBC,OAAtB,EAA+BC,MAA/B,CAAvB;IACA,OAAOc,QAAP;EACD;;AA/BuC"},"metadata":{},"sourceType":"module"}