{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\81806\\\\Documents\\\\work\\\\GIS_APP\\\\gis_app1\\\\src\\\\App.js\";\nimport './App.css';\nimport \"https://unpkg.com/elm-pep@1.0.6/dist/elm-pep.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport Tile from 'ol/layer/Tile';\nimport Vector from 'ol/layer/Vector';\nimport { fromLonLat } from 'ol/proj';\nimport Stroke from 'ol/style/Stroke';\nimport interaction from 'ol/interaction';\nimport Draw from 'ol/interaction/Draw';\nimport Source from 'ol/source';\nimport OSM from \"ol/source/OSM\";\nimport Style from 'ol/style/Style';\nimport Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport MapApp from \"./Map/MapApp\";\nimport DrawMap from './DrawMap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"aaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapApp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}; // class Polygon extends React.Component {\n//   static contextTypes = {\n//     map: PropTypes.object\n//   }\n//   componentDidMount() {\n//   \tconst source = new Vector({wrapX: false});\n//     this.polygonBase = new Vector({ source });\n//     this.context.map.addLayer(this.polygonBase);\n// \t\tconst styleFunction = feature => {\n//       var geometry = feature.getGeometry();\n//       console.log('geometry', geometry.getType());\n//       if (geometry.getType() === 'LineString') {\n//         var styles = [\n//           new Style({\n//             stroke: new Stroke({\n//               color: 'rgba(255, 102, 0, 1)',\n//               width: 3\n//             })\n//           })\n//         ];\n//         return styles;\n//       }\n// \t\t\tif (geometry.getType() === 'Point') {\n//         var styles = [\n//           new Style({\n// \t\t\t\t\t\timage: new Circle({\n//       \t    \tradius: 5,\n//       \t    \tstroke: new Stroke({ color: 'rgba(255, 0, 0, 1)' }),\n//       \t    \tfill: new Fill({ color: 'rgba(255, 0, 0, 0.5)' })\n// \t\t\t\t\t\t})\n//           })\n//         ];\n//         return styles;\n//       }\n//       if (geometry.getType() === 'Polygon') {\n//         var styles = [\n//           new Style({\n//             stroke: new Stroke({\n//               color: 'rgba(255, 102, 0, 0)',\n//               width: 3\n//             }),\n//             fill: new Fill({\n//               color: 'rgba(255, 102, 0, 0.3)'\n//             })\n//           })\n//         ];\n//         return styles;\n//       }\n//       return false;\n//     };\n//     // Define the polygon draw interaction\n//     this.draw = new Draw({\n//       source: source,\n//       type: 'Polygon',\n// \t\t\tstyle: styleFunction\n//     });\n//     // Add the draw interaction\n//     this.context.map.addInteraction(this.draw);\n// \t\tthis.draw.on('drawstart', event => {\n// \t\t\tthis.polygonFirstCoordinate = event.feature.getGeometry().getFirstCoordinate();\n// \t\t});\n//   }\n//   componentWillUnmount () {\n//     this.context.map.removeInteraction(this.draw);\n//   }\n//   render() { return <p>Drawing polygon</p>; }\n// }\n// import React from \"react\"\n// import MapPane from \"./Map/MapPane\";\n// import TypeSelect from './TypeSelect'\n//  const App = () =>{\n//   return (\n//   <div>\n//     <MapPane />\n//     <TypeSelect />\n//   </div>\n//   );\n// }\n\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","PropTypes","Map","View","Tile","Vector","fromLonLat","Stroke","interaction","Draw","Source","OSM","Style","Circle","Fill","MapApp","DrawMap","App"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/src/App.js"],"sourcesContent":["import './App.css';\nimport \"https://unpkg.com/elm-pep@1.0.6/dist/elm-pep.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport Tile from 'ol/layer/Tile';\nimport Vector from 'ol/layer/Vector';\nimport { fromLonLat } from 'ol/proj';\nimport Stroke from 'ol/style/Stroke';\nimport interaction from 'ol/interaction';\nimport Draw from 'ol/interaction/Draw';\nimport Source from 'ol/source';\nimport OSM from \"ol/source/OSM\";\nimport Style from 'ol/style/Style';\nimport Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\n\nimport MapApp from \"./Map/MapApp\";\nimport DrawMap from './DrawMap';\n\nconst App = () => {\n  return(\n    <div>\n      <label>aaa</label>\n      <MapApp />\n      \n    </div>\n   );\n}\n\n\n\n// class Polygon extends React.Component {\n//   static contextTypes = {\n//     map: PropTypes.object\n//   }\n\n//   componentDidMount() {\n//   \tconst source = new Vector({wrapX: false});\n//     this.polygonBase = new Vector({ source });\n//     this.context.map.addLayer(this.polygonBase);\n\t\t\n// \t\tconst styleFunction = feature => {\n//       var geometry = feature.getGeometry();\n//       console.log('geometry', geometry.getType());\n//       if (geometry.getType() === 'LineString') {\n//         var styles = [\n//           new Style({\n//             stroke: new Stroke({\n//               color: 'rgba(255, 102, 0, 1)',\n//               width: 3\n//             })\n//           })\n//         ];\n//         return styles;\n//       }\n// \t\t\tif (geometry.getType() === 'Point') {\n//         var styles = [\n//           new Style({\n// \t\t\t\t\t\timage: new Circle({\n//       \t    \tradius: 5,\n//       \t    \tstroke: new Stroke({ color: 'rgba(255, 0, 0, 1)' }),\n//       \t    \tfill: new Fill({ color: 'rgba(255, 0, 0, 0.5)' })\n// \t\t\t\t\t\t})\n//           })\n//         ];\n//         return styles;\n//       }\n//       if (geometry.getType() === 'Polygon') {\n//         var styles = [\n//           new Style({\n//             stroke: new Stroke({\n//               color: 'rgba(255, 102, 0, 0)',\n//               width: 3\n//             }),\n//             fill: new Fill({\n//               color: 'rgba(255, 102, 0, 0.3)'\n//             })\n//           })\n//         ];\n//         return styles;\n//       }\n//       return false;\n//     };\n    \n//     // Define the polygon draw interaction\n//     this.draw = new Draw({\n//       source: source,\n//       type: 'Polygon',\n// \t\t\tstyle: styleFunction\n//     });\n//     // Add the draw interaction\n//     this.context.map.addInteraction(this.draw);\n\t\t\n// \t\tthis.draw.on('drawstart', event => {\n// \t\t\tthis.polygonFirstCoordinate = event.feature.getGeometry().getFirstCoordinate();\n// \t\t});\n//   }\n\n//   componentWillUnmount () {\n//     this.context.map.removeInteraction(this.draw);\n//   }\n\n//   render() { return <p>Drawing polygon</p>; }\n// }\n\n\n\n// import React from \"react\"\n\n// import MapPane from \"./Map/MapPane\";\n// import TypeSelect from './TypeSelect'\n\n\n//  const App = () =>{\n//   return (\n//   <div>\n//     <MapPane />\n//     <TypeSelect />\n\n//   </div>\n//   );\n// }\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAO,iDAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAChB,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CARD,C,CAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;KAtGMA,G;AAwGN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}