{"ast":null,"code":"import { isObject, isSharedArrayBuffer } from \"./is.mjs\";\nimport { THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT, THIS_IS_NOT_AN_OBJECT } from \"./messages.mjs\";\nimport { ArrayBufferPrototypeSlice, MAX_SAFE_INTEGER, MathTrunc, NativeTypeError, NumberIsNaN, ObjectIs, SymbolSpecies } from \"./primordials.mjs\";\n/**\n * @see https://tc39.es/ecma262/#sec-tointegerorinfinity\n * @param {unknown} target\n * @returns {number}\n */\n\nexport function ToIntegerOrInfinity(target) {\n  const number = +target;\n\n  if (NumberIsNaN(number) || number === 0) {\n    return 0;\n  }\n\n  return MathTrunc(number);\n}\n/**\n * @see https://tc39.es/ecma262/#sec-tolength\n * @param {unknown} target\n * @returns {number}\n */\n\nexport function ToLength(target) {\n  const length = ToIntegerOrInfinity(target);\n\n  if (length < 0) {\n    return 0;\n  }\n\n  return length < MAX_SAFE_INTEGER ? length : MAX_SAFE_INTEGER;\n}\n/**\n * @see https://tc39.es/ecma262/#sec-speciesconstructor\n * @param {object} target\n * @param {{ new(...args: any[]): any; }} defaultConstructor\n * @returns {{ new(...args: any[]): any; }}\n */\n\nexport function SpeciesConstructor(target, defaultConstructor) {\n  if (!isObject(target)) {\n    throw NativeTypeError(THIS_IS_NOT_AN_OBJECT);\n  }\n\n  const constructor = target.constructor;\n\n  if (constructor === undefined) {\n    return defaultConstructor;\n  }\n\n  if (!isObject(constructor)) {\n    throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n  }\n\n  const species = constructor[SymbolSpecies];\n\n  if (species == null) {\n    return defaultConstructor;\n  }\n\n  return species;\n}\n/**\n * @see https://tc39.es/ecma262/#sec-isdetachedbuffer\n * @param {ArrayBufferLike} buffer\n * @returns {boolean}\n */\n\nexport function IsDetachedBuffer(buffer) {\n  if (isSharedArrayBuffer(buffer)) {\n    return false;\n  }\n\n  try {\n    ArrayBufferPrototypeSlice(buffer, 0, 0);\n    return false;\n  } catch (e) {\n    /* empty */\n  }\n\n  return true;\n}\n/**\n * bigint comparisons are not supported\n *\n * @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort\n * @param {number} x\n * @param {number} y\n * @returns {-1 | 0 | 1}\n */\n\nexport function defaultCompare(x, y) {\n  const isXNaN = NumberIsNaN(x);\n  const isYNaN = NumberIsNaN(y);\n\n  if (isXNaN && isYNaN) {\n    return 0;\n  }\n\n  if (isXNaN) {\n    return 1;\n  }\n\n  if (isYNaN) {\n    return -1;\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (x > y) {\n    return 1;\n  }\n\n  if (x === 0 && y === 0) {\n    const isXPlusZero = ObjectIs(x, 0);\n    const isYPlusZero = ObjectIs(y, 0);\n\n    if (!isXPlusZero && isYPlusZero) {\n      return -1;\n    }\n\n    if (isXPlusZero && !isYPlusZero) {\n      return 1;\n    }\n  }\n\n  return 0;\n}","map":{"version":3,"names":["isObject","isSharedArrayBuffer","THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT","THIS_IS_NOT_AN_OBJECT","ArrayBufferPrototypeSlice","MAX_SAFE_INTEGER","MathTrunc","NativeTypeError","NumberIsNaN","ObjectIs","SymbolSpecies","ToIntegerOrInfinity","target","number","ToLength","length","SpeciesConstructor","defaultConstructor","constructor","undefined","species","IsDetachedBuffer","buffer","e","defaultCompare","x","y","isXNaN","isYNaN","isXPlusZero","isYPlusZero"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/@petamoriken/float16/src/_util/spec.mjs"],"sourcesContent":["import { isObject, isSharedArrayBuffer } from \"./is.mjs\";\nimport {\n  THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT,\n  THIS_IS_NOT_AN_OBJECT,\n} from \"./messages.mjs\";\nimport {\n  ArrayBufferPrototypeSlice,\n  MAX_SAFE_INTEGER,\n  MathTrunc,\n  NativeTypeError,\n  NumberIsNaN,\n  ObjectIs,\n  SymbolSpecies,\n} from \"./primordials.mjs\";\n\n/**\n * @see https://tc39.es/ecma262/#sec-tointegerorinfinity\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToIntegerOrInfinity(target) {\n  const number = +target;\n\n  if (NumberIsNaN(number) || number === 0) {\n    return 0;\n  }\n\n  return MathTrunc(number);\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-tolength\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToLength(target) {\n  const length = ToIntegerOrInfinity(target);\n  if (length < 0) {\n    return 0;\n  }\n\n  return length < MAX_SAFE_INTEGER\n    ? length\n    : MAX_SAFE_INTEGER;\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-speciesconstructor\n * @param {object} target\n * @param {{ new(...args: any[]): any; }} defaultConstructor\n * @returns {{ new(...args: any[]): any; }}\n */\nexport function SpeciesConstructor(target, defaultConstructor) {\n  if (!isObject(target)) {\n    throw NativeTypeError(THIS_IS_NOT_AN_OBJECT);\n  }\n\n  const constructor = target.constructor;\n  if (constructor === undefined) {\n    return defaultConstructor;\n  }\n  if (!isObject(constructor)) {\n    throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n  }\n\n  const species = constructor[SymbolSpecies];\n  if (species == null) {\n    return defaultConstructor;\n  }\n\n  return species;\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-isdetachedbuffer\n * @param {ArrayBufferLike} buffer\n * @returns {boolean}\n */\nexport function IsDetachedBuffer(buffer) {\n  if (isSharedArrayBuffer(buffer)) {\n    return false;\n  }\n\n  try {\n    ArrayBufferPrototypeSlice(buffer, 0, 0);\n    return false;\n  } catch (e) {/* empty */}\n\n  return true;\n}\n\n/**\n * bigint comparisons are not supported\n *\n * @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort\n * @param {number} x\n * @param {number} y\n * @returns {-1 | 0 | 1}\n */\nexport function defaultCompare(x, y) {\n  const isXNaN = NumberIsNaN(x);\n  const isYNaN = NumberIsNaN(y);\n\n  if (isXNaN && isYNaN) {\n    return 0;\n  }\n\n  if (isXNaN) {\n    return 1;\n  }\n\n  if (isYNaN) {\n    return -1;\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (x > y) {\n    return 1;\n  }\n\n  if (x === 0 && y === 0) {\n    const isXPlusZero = ObjectIs(x, 0);\n    const isYPlusZero = ObjectIs(y, 0);\n\n    if (!isXPlusZero && isYPlusZero) {\n      return -1;\n    }\n\n    if (isXPlusZero && !isYPlusZero) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}