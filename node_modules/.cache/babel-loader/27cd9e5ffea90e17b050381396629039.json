{"ast":null,"code":"/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\n\nconst SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\n\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\n\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\n\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\n\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\n\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, declutterBuilderGroup) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n\n  const textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\n\n\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, transform, declutterBuilderGroup) {\n  let loading = false;\n  const imageStyle = style.getImage();\n\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance, transform, declutterBuilderGroup);\n  return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\n\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, transform, declutterBuilderGroup) {\n  const geometry = style.getGeometryFunction()(feature);\n\n  if (!geometry) {\n    return;\n  }\n\n  const simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, transform);\n  const renderer = style.getRenderer();\n\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature, declutterBuilderGroup);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\n\n\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n    /** @type {import(\"../geom/GeometryCollection.js\").default} */\n    geometry.getGeometries();\n\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n\n    return;\n  }\n\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n  /** @type {import(\"../geom/SimpleGeometry.js\").default} */\n  geometry, feature, style.getRenderer(), style.getHitDetectionRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, declutterBuilderGroup) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature, declutterBuilderGroup);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, declutterBuilderGroup) {\n  const strokeStyle = style.getStroke();\n\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n\n  const textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, declutterBuilderGroup) {\n  const strokeStyle = style.getStroke();\n\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n\n  const textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, declutterBuilderGroup) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n\n  const textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderPointGeometry(builderGroup, geometry, style, feature, declutterBuilderGroup) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n\n  let declutterImageWithText;\n\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n\n    let imageBuilderGroup = builderGroup;\n\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n\n    const imageReplay = imageBuilderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, declutterBuilderGroup) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n\n  let declutterImageWithText;\n\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n\n    let imageBuilderGroup = builderGroup;\n\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n\n    const imageReplay = imageBuilderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\n\n\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, declutterBuilderGroup) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n\n  const textStyle = style.getText();\n\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}","map":{"version":3,"names":["ImageState","getUid","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","parseInt","getSquaredTolerance","resolution","pixelRatio","tolerance","getTolerance","builderGroup","geometry","style","feature","declutterBuilderGroup","fillStyle","getFill","strokeStyle","getStroke","circleReplay","getBuilder","getZIndex","setFillStrokeStyle","drawCircle","textStyle","getText","textReplay","setTextStyle","drawText","renderFeature","replayGroup","squaredTolerance","listener","transform","loading","imageStyle","getImage","imageState","getImageState","LOADED","ERROR","unlistenImageChange","IDLE","load","listenImageChange","renderFeatureInternal","getGeometryFunction","simplifiedGeometry","simplifyTransformed","renderer","getRenderer","renderGeometry","geometryRenderer","getType","geometries","getGeometries","i","ii","length","replay","drawCustom","getHitDetectionRenderer","getGeometriesArray","lineStringReplay","drawLineString","drawMultiLineString","polygonReplay","drawMultiPolygon","declutterImageWithText","imageBuilderGroup","declutterMode","getDeclutterMode","imageReplay","setImageStyle","drawPoint","textBuilderGroup","drawMultiPoint","drawPolygon"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/ol/renderer/vector.js"],"sourcesContent":["/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}