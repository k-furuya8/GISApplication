{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\81806\\\\Documents\\\\work\\\\GIS_APP\\\\gis_app1\\\\src\\\\Map\\\\MapApp.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useRef, useState } from 'react';\n// // OpenLayers読み込み\n// import Map from 'ol/Map';\n// import View from 'ol/View';\n// import TileLayer from 'ol/layer/Tile';\n// import { fromLonLat } from 'ol/proj';\n// import OlSourceOSM from \"ol/source/OSM\";\n// import 'ol/ol.css';\n// import './MapPane.css';\nimport \"https://unpkg.com/elm-pep@1.0.6/dist/elm-pep.js\";\nimport { React, useEffect, useState, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport Tile from 'ol/layer/Tile';\nimport { Vector as VectorLayer } from 'ol/layer';\nimport { fromLonLat } from 'ol/proj';\nimport Stroke from 'ol/style/Stroke';\nimport interaction from 'ol/interaction';\nimport Draw from 'ol/interaction/Draw';\nimport Source from 'ol/source';\nimport OSM from \"ol/source/OSM\";\nimport Style from 'ol/style/Style';\nimport Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport DrawMap from \"./DrawMap\";\nimport Layer from \"ol/layer/Layer\";\nimport './MapApp.css';\nimport { Vector as VectorSorsce } from 'ol/source';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapApp = () => {\n  _s();\n\n  const mapRef = useRef();\n  const [map, setMap] = useState(null);\n  const [type, setType] = useState(\"Point\");\n  const typeRef = useRef(null); // const raster = new Tile({\n  //   source: new OSM(),\n  // });\n  // const source = new VectorSorsce({wrapX: false});\n  // const vector = new VectorLayer({\n  //   source: source,\n  // });\n  // on component mount\n\n  useEffect(() => {\n    let mapObject = new Map({\n      view: new View({\n        center: fromLonLat([139.767, 35.681]),\n        zoom: 8\n      }),\n      layers: [new Tile({\n        source: new OSM()\n      })]\n    });\n    mapObject.setTarget(mapRef.current);\n    setMap(mapObject); //console.log(mapObject);\n\n    return () => mapObject.setTarget(undefined);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    ref: mapRef,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Geometry type: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ref: typeRef,\n      value: type,\n      onChange: event => setType(event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Point\",\n        children: \"Point\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"LineString\",\n        children: \"LineString\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Polygon\",\n        children: \"Polygon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Circle\",\n        children: \"Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"None\",\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DrawMap, {\n      type: type,\n      map: map\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n}; //import './MapApp.css';\n// class MapApp extends React.Component {\n// \tconstructor(props) {\n//     super(props);\n// \t\t// Define base layer\n//   \tthis.baseLayer = new Tile({ source: new OSM() });\n//   \t// Define base view\n//     this.baseView = new View({\n//       center: fromLonLat([37.41, 8.82]),\n//       zoom: 4\n//     });\n// \t\t// Add map, base view and layer\n//     this.map = new Map({\n//       layers: [this.baseLayer],\n//       view: this.baseView\n//     });\n//   }\n// \tstatic childContextTypes = {\n//   \tmap: PropTypes.object\n//   }\n//   getChildContext() {\n//   \treturn {\n//       map: this.map\n//     }\n//   }\n//   componentDidMount() {\n//     // set map target element\n//     this.map.setTarget(this.map);\n//   }\n//   render() {\n//   \treturn (\n//     <div ref=\"map\">\n//       <DrawMap />\n//     </div>\n//     );\n//   }\n// }\n\n\n_s(MapApp, \"WwvFhZ+lYmcrx82BT15/XLhC2Pc=\");\n\n_c = MapApp;\nexport default MapApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapApp\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ReactDOM","PropTypes","Map","View","Tile","Vector","VectorLayer","fromLonLat","Stroke","interaction","Draw","Source","OSM","Style","Circle","Fill","DrawMap","Layer","VectorSorsce","MapApp","mapRef","map","setMap","type","setType","typeRef","mapObject","view","center","zoom","layers","source","setTarget","current","undefined","event","target","value"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/src/Map/MapApp.js"],"sourcesContent":["// import React, { useEffect, useRef, useState } from 'react';\r\n// // OpenLayers読み込み\r\n// import Map from 'ol/Map';\r\n// import View from 'ol/View';\r\n// import TileLayer from 'ol/layer/Tile';\r\n// import { fromLonLat } from 'ol/proj';\r\n// import OlSourceOSM from \"ol/source/OSM\";\r\n\r\n// import 'ol/ol.css';\r\n// import './MapPane.css';\r\n\r\n\r\n\r\n\r\n\r\nimport \"https://unpkg.com/elm-pep@1.0.6/dist/elm-pep.js\";\r\nimport {React,useEffect,useState,useRef} from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport PropTypes from 'prop-types';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport Tile from 'ol/layer/Tile';\r\nimport {Vector as VectorLayer} from 'ol/layer';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport Stroke from 'ol/style/Stroke';\r\nimport interaction from 'ol/interaction';\r\nimport Draw from 'ol/interaction/Draw';\r\nimport Source from 'ol/source';\r\nimport OSM from \"ol/source/OSM\";\r\nimport Style from 'ol/style/Style';\r\nimport Circle from 'ol/style/Circle';\r\nimport Fill from 'ol/style/Fill';\r\nimport DrawMap from \"./DrawMap\";\r\nimport Layer from \"ol/layer/Layer\";\r\nimport './MapApp.css';\r\nimport {Vector as VectorSorsce} from 'ol/source';\r\n\r\nconst MapApp = () => {\r\n  const mapRef = useRef();\r\n\r\n  const [map,setMap] = useState(null);\r\n\r\n  const [type, setType] = useState(\"Point\");\r\n\r\n  const typeRef = useRef(null);\r\n\r\n  // const raster = new Tile({\r\n  //   source: new OSM(),\r\n  // });\r\n  \r\n  // const source = new VectorSorsce({wrapX: false});\r\n  \r\n  // const vector = new VectorLayer({\r\n  //   source: source,\r\n  // });\r\n\r\n  // on component mount\r\n    useEffect(() => {\r\n        let mapObject = new Map({\r\n          view: new View({\r\n            center: fromLonLat([139.767, 35.681]),\r\n            zoom: 8,\r\n          }),\r\n          layers: [\r\n            new Tile({\r\n             source: new OSM(),\r\n            }),\r\n         ],});\r\n        mapObject.setTarget(mapRef.current);\r\n        setMap(mapObject);\r\n        //console.log(mapObject);\r\n\r\n        \r\n\r\n        return () => mapObject.setTarget(undefined);\r\n    }, []);\r\n\r\n    \r\n\r\n    return (\r\n      <div className={\"map\"} ref={mapRef}>\r\n        <label>Geometry type: </label>\r\n        <select\r\n          ref={typeRef}\r\n          value={type}\r\n          onChange={(event) => setType(event.target.value)}\r\n        >\r\n          <option value=\"Point\">Point</option>\r\n          <option value=\"LineString\">LineString</option>\r\n          <option value=\"Polygon\">Polygon</option>\r\n          <option value=\"Circle\">Circle</option>\r\n          <option value=\"None\">None</option>\r\n        </select>\r\n        <label>{type}</label>\r\n        <DrawMap type = {type} map = {map} />\r\n      </div>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//import './MapApp.css';\r\n\r\n// class MapApp extends React.Component {\r\n// \tconstructor(props) {\r\n//     super(props);\r\n\r\n// \t\t// Define base layer\r\n//   \tthis.baseLayer = new Tile({ source: new OSM() });\r\n    \r\n//   \t// Define base view\r\n//     this.baseView = new View({\r\n//       center: fromLonLat([37.41, 8.82]),\r\n//       zoom: 4\r\n//     });\r\n\r\n// \t\t// Add map, base view and layer\r\n//     this.map = new Map({\r\n//       layers: [this.baseLayer],\r\n//       view: this.baseView\r\n//     });\r\n//   }\r\n  \r\n// \tstatic childContextTypes = {\r\n//   \tmap: PropTypes.object\r\n//   }\r\n  \r\n//   getChildContext() {\r\n//   \treturn {\r\n//       map: this.map\r\n//     }\r\n//   }\r\n  \r\n//   componentDidMount() {\r\n//     // set map target element\r\n//     this.map.setTarget(this.map);\r\n//   }\r\n\t\r\n//   render() {\r\n//   \treturn (\r\n//     <div ref=\"map\">\r\n//       <DrawMap />\r\n//     </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n\r\nexport default MapApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}