{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\81806\\\\Documents\\\\work\\\\GIS_APP\\\\gis_app1\\\\src\\\\App.js\";\nimport './App.css';\nimport \"https://unpkg.com/elm-pep@1.0.6/dist/elm-pep.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ol from 'ol/ol.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.clear();\n\nconst App = () => /*#__PURE__*/_jsxDEV(Map, {\n  children: /*#__PURE__*/_jsxDEV(Polygon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 24\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 19\n}, this);\n\n_c = App;\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props); // Define base layer\n\n    this.baseLayer = new ol.layer.Tile({\n      source: new ol.source.OSM()\n    }); // Define base view\n\n    this.baseView = new ol.View({\n      center: ol.proj.fromLonLat([37.41, 8.82]),\n      zoom: 4\n    }); // Add map, base view and layer\n\n    this.map = new ol.Map({\n      layers: [this.baseLayer],\n      view: this.baseView\n    });\n  }\n\n  getChildContext() {\n    return {\n      map: this.map\n    };\n  }\n\n  componentDidMount() {\n    // set map target element\n    this.map.setTarget(this.map);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: \"map\",\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nMap.childContextTypes = {\n  map: PropTypes.object\n};\n\nclass Polygon extends React.Component {\n  componentDidMount() {\n    const source = new ol.source.Vector({\n      wrapX: false\n    });\n    this.polygonBase = new ol.layer.Vector({\n      source\n    });\n    this.context.map.addLayer(this.polygonBase);\n\n    const styleFunction = feature => {\n      var geometry = feature.getGeometry();\n      console.log('geometry', geometry.getType());\n\n      if (geometry.getType() === 'LineString') {\n        var styles = [new ol.style.Style({\n          stroke: new ol.style.Stroke({\n            color: 'rgba(255, 102, 0, 1)',\n            width: 3\n          })\n        })];\n        return styles;\n      }\n\n      if (geometry.getType() === 'Point') {\n        var styles = [new ol.style.Style({\n          image: new ol.style.Circle({\n            radius: 5,\n            stroke: new ol.style.Stroke({\n              color: 'rgba(255, 0, 0, 1)'\n            }),\n            fill: new ol.style.Fill({\n              color: 'rgba(255, 0, 0, 0.5)'\n            })\n          })\n        })];\n        return styles;\n      }\n\n      if (geometry.getType() === 'Polygon') {\n        var styles = [new ol.style.Style({\n          stroke: new ol.style.Stroke({\n            color: 'rgba(255, 102, 0, 0)',\n            width: 3\n          }),\n          fill: new ol.style.Fill({\n            color: 'rgba(255, 102, 0, 0.3)'\n          })\n        })];\n        return styles;\n      }\n\n      return false;\n    }; // Define the polygon draw interaction\n\n\n    this.draw = new ol.interaction.Draw({\n      source: source,\n      type: 'Polygon',\n      style: styleFunction\n    }); // Add the draw interaction\n\n    this.context.map.addInteraction(this.draw);\n    this.draw.on('drawstart', event => {\n      this.polygonFirstCoordinate = event.feature.getGeometry().getFirstCoordinate();\n    });\n  }\n\n  componentWillUnmount() {\n    this.context.map.removeInteraction(this.draw);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drawing polygon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }, this);\n  }\n\n} // ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n\nPolygon.contextTypes = {\n  map: PropTypes.object\n};\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","PropTypes","ol","console","clear","App","Map","Component","constructor","props","baseLayer","layer","Tile","source","OSM","baseView","View","center","proj","fromLonLat","zoom","map","layers","view","getChildContext","componentDidMount","setTarget","render","children","childContextTypes","object","Polygon","Vector","wrapX","polygonBase","context","addLayer","styleFunction","feature","geometry","getGeometry","log","getType","styles","style","Style","stroke","Stroke","color","width","image","Circle","radius","fill","Fill","draw","interaction","Draw","type","addInteraction","on","event","polygonFirstCoordinate","getFirstCoordinate","componentWillUnmount","removeInteraction","contextTypes"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/src/App.js"],"sourcesContent":["import './App.css';\nimport \"https://unpkg.com/elm-pep@1.0.6/dist/elm-pep.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ol from 'ol/ol.js';\n\nconsole.clear();\nconst App = () => <Map><Polygon /></Map>;\n\nclass Map extends React.Component {\n\tconstructor(props) {\n    super(props);\n\n\t\t// Define base layer\n  \tthis.baseLayer = new ol.layer.Tile({ source: new ol.source.OSM() });\n    \n  \t// Define base view\n    this.baseView = new ol.View({\n      center: ol.proj.fromLonLat([37.41, 8.82]),\n      zoom: 4\n    });\n\n\t\t// Add map, base view and layer\n    this.map = new ol.Map({\n      layers: [this.baseLayer],\n      view: this.baseView\n    });\n  }\n  \n\tstatic childContextTypes = {\n  \tmap: PropTypes.object\n  }\n  \n  getChildContext() {\n  \treturn {\n      map: this.map\n    }\n  }\n  \n  componentDidMount() {\n    // set map target element\n    this.map.setTarget(this.map);\n  }\n\t\n  render() {\n  \treturn <div ref=\"map\">\n      {this.props.children}\n    </div>;\n  }\n}\n\nclass Polygon extends React.Component {\n  static contextTypes = {\n    map: PropTypes.object\n  }\n\n  componentDidMount() {\n  \tconst source = new ol.source.Vector({wrapX: false});\n    this.polygonBase = new ol.layer.Vector({ source });\n    this.context.map.addLayer(this.polygonBase);\n\t\t\n\t\tconst styleFunction = feature => {\n      var geometry = feature.getGeometry();\n      console.log('geometry', geometry.getType());\n      if (geometry.getType() === 'LineString') {\n        var styles = [\n          new ol.style.Style({\n            stroke: new ol.style.Stroke({\n              color: 'rgba(255, 102, 0, 1)',\n              width: 3\n            })\n          })\n        ];\n        return styles;\n      }\n\t\t\tif (geometry.getType() === 'Point') {\n        var styles = [\n          new ol.style.Style({\n\t\t\t\t\t\timage: new ol.style.Circle({\n      \t    \tradius: 5,\n      \t    \tstroke: new ol.style.Stroke({ color: 'rgba(255, 0, 0, 1)' }),\n      \t    \tfill: new ol.style.Fill({ color: 'rgba(255, 0, 0, 0.5)' })\n\t\t\t\t\t\t})\n          })\n        ];\n        return styles;\n      }\n      if (geometry.getType() === 'Polygon') {\n        var styles = [\n          new ol.style.Style({\n            stroke: new ol.style.Stroke({\n              color: 'rgba(255, 102, 0, 0)',\n              width: 3\n            }),\n            fill: new ol.style.Fill({\n              color: 'rgba(255, 102, 0, 0.3)'\n            })\n          })\n        ];\n        return styles;\n      }\n      return false;\n    };\n    \n    // Define the polygon draw interaction\n    this.draw = new ol.interaction.Draw({\n      source: source,\n      type: 'Polygon',\n\t\t\tstyle: styleFunction\n    });\n    // Add the draw interaction\n    this.context.map.addInteraction(this.draw);\n\t\t\n\t\tthis.draw.on('drawstart', event => {\n\t\t\tthis.polygonFirstCoordinate = event.feature.getGeometry().getFirstCoordinate();\n\t\t});\n  }\n\n  componentWillUnmount () {\n    this.context.map.removeInteraction(this.draw);\n  }\n\n  render() { return <p>Drawing polygon</p>; }\n}\n\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}