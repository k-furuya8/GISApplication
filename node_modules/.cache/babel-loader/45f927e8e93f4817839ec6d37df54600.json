{"ast":null,"code":"/**\n * @module ol/webgl\n */\nimport { SAFARI_BUG_237906 } from './has.js';\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\n\nexport const ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\n\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\n\nexport const STREAM_DRAW = 0x88e0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\n\nexport const STATIC_DRAW = 0x88e4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\n\nexport const DYNAMIC_DRAW = 0x88e8;\n/**\n * @const\n * @type {number}\n */\n\nexport const UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\n\nexport const UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\n\nexport const UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\n\nexport const FLOAT = 0x1406;\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\n\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\n\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign({\n    preserveDrawingBuffer: true,\n    antialias: SAFARI_BUG_237906 ? false : true // https://bugs.webkit.org/show_bug.cgi?id=237906\n\n  }, attributes);\n  const ii = CONTEXT_IDS.length;\n\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n\n      if (context) {\n        return (\n          /** @type {!WebGLRenderingContext} */\n          context\n        );\n      }\n    } catch (e) {// pass\n    }\n  }\n\n  return null;\n}\n/**\n * @type {Array<string>}\n */\n\nlet supportedExtensions;\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\n\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n\n  return supportedExtensions;\n}","map":{"version":3,"names":["SAFARI_BUG_237906","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","CONTEXT_IDS","getContext","canvas","attributes","Object","assign","preserveDrawingBuffer","antialias","ii","length","i","context","e","supportedExtensions","getSupportedExtensions","document","createElement","gl"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/ol/webgl.js"],"sourcesContent":["/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAAQA,iBAAR,QAAgC,UAAhC;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAArB;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAA7B;AAEP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAApB;AAEP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAApB;AAEP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAArB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAtB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAG,MAAvB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAArB;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,KAAK,GAAG,MAAd;AAEP;AACA;;AAEA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,CAAC,oBAAD,EAAuB,OAAvB,EAAgC,WAAhC,EAA6C,WAA7C,CAApB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,UAA5B,EAAwC;EAC7CA,UAAU,GAAGC,MAAM,CAACC,MAAP,CACX;IACEC,qBAAqB,EAAE,IADzB;IAEEC,SAAS,EAAEjB,iBAAiB,GAAG,KAAH,GAAW,IAFzC,CAE+C;;EAF/C,CADW,EAKXa,UALW,CAAb;EAOA,MAAMK,EAAE,GAAGR,WAAW,CAACS,MAAvB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,EAApB,EAAwB,EAAEE,CAA1B,EAA6B;IAC3B,IAAI;MACF,MAAMC,OAAO,GAAGT,MAAM,CAACD,UAAP,CAAkBD,WAAW,CAACU,CAAD,CAA7B,EAAkCP,UAAlC,CAAhB;;MACA,IAAIQ,OAAJ,EAAa;QACX;UAAO;UAAuCA;QAA9C;MACD;IACF,CALD,CAKE,OAAOC,CAAP,EAAU,CACV;IACD;EACF;;EACD,OAAO,IAAP;AACD;AAED;AACA;AACA;;AACA,IAAIC,mBAAJ;AAEA;AACA;AACA;;AACA,OAAO,SAASC,sBAAT,GAAkC;EACvC,IAAI,CAACD,mBAAL,EAA0B;IACxB,MAAMX,MAAM,GAAGa,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;IACA,MAAMC,EAAE,GAAGhB,UAAU,CAACC,MAAD,CAArB;;IACA,IAAIe,EAAJ,EAAQ;MACNJ,mBAAmB,GAAGI,EAAE,CAACH,sBAAH,EAAtB;IACD;EACF;;EACD,OAAOD,mBAAP;AACD"},"metadata":{},"sourceType":"module"}