{"ast":null,"code":"/**\n * @module ol/format/IIIFInfo\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n\n/**\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile|Object<string, number>|TileInfo>>}\n *    ImageInformationResponse\n */\n\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\n\nexport const Versions = {\n  VERSION1: 'version1',\n  VERSION2: 'version2',\n  VERSION3: 'version3'\n};\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\n\nconst IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n  'level0': {\n    supports: [],\n    formats: [],\n    qualities: ['native']\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['native']\n  },\n  'level2': {\n    supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct', 'sizeByConfinedWh', 'sizeByWh'],\n    formats: ['jpg', 'png'],\n    qualities: ['native', 'color', 'grey', 'bitonal']\n  }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default']\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['default']\n  },\n  'level2': {\n    supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct', 'sizeByConfinedWh', 'sizeByDistortedWh', 'sizeByWh'],\n    formats: ['jpg', 'png'],\n    qualities: ['default', 'bitonal']\n  }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default']\n  },\n  'level1': {\n    supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\n    formats: ['jpg'],\n    qualities: ['default']\n  },\n  'level2': {\n    supports: ['regionByPx', 'regionSquare', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct', 'sizeByConfinedWh', 'sizeByWh'],\n    formats: ['jpg', 'png'],\n    qualities: ['default']\n  }\n};\nIIIF_PROFILE_VALUES['none'] = {\n  'none': {\n    supports: [],\n    formats: [],\n    qualities: []\n  }\n};\nconst COMPLIANCE_VERSION1 = /^https?:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(?:1\\.1\\/)?compliance\\.html#level[0-2]$/;\nconst COMPLIANCE_VERSION2 = /^https?:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](?:\\.json)?$/;\nconst COMPLIANCE_VERSION3 = /(^https?:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](?:\\.json)?$)|(^level[0-2]$)/;\n\nfunction generateVersion1Options(iiifInfo) {\n  let levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(); // Version 1.0 and 1.1 do not require a profile.\n\n  if (levelProfile === undefined) {\n    levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n  }\n\n  return {\n    url: iiifInfo.imageInfo['@id'] === undefined ? undefined : iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    supports: levelProfile.supports,\n    formats: [...levelProfile.formats, iiifInfo.imageInfo.formats === undefined ? [] : iiifInfo.imageInfo.formats],\n    qualities: [...levelProfile.qualities, iiifInfo.imageInfo.qualities === undefined ? [] : iiifInfo.imageInfo.qualities],\n    resolutions: iiifInfo.imageInfo.scale_factors,\n    tileSize: iiifInfo.imageInfo.tile_width !== undefined ? iiifInfo.imageInfo.tile_height !== undefined ? [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height] : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width] : iiifInfo.imageInfo.tile_height != undefined ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height] : undefined\n  };\n}\n\nfunction generateVersion2Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n        additionalProfile = Array.isArray(iiifInfo.imageInfo.profile) && iiifInfo.imageInfo.profile.length > 1,\n        profileSupports = additionalProfile && iiifInfo.imageInfo.profile[1].supports ? iiifInfo.imageInfo.profile[1].supports : [],\n        profileFormats = additionalProfile && iiifInfo.imageInfo.profile[1].formats ? iiifInfo.imageInfo.profile[1].formats : [],\n        profileQualities = additionalProfile && iiifInfo.imageInfo.profile[1].qualities ? iiifInfo.imageInfo.profile[1].qualities : [];\n  return {\n    url: iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n      return [size.width, size.height];\n    }),\n    tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [iiifInfo.imageInfo.tiles.map(function (tile) {\n      return tile.width;\n    })[0], iiifInfo.imageInfo.tiles.map(function (tile) {\n      return tile.height === undefined ? tile.width : tile.height;\n    })[0]],\n    resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined : iiifInfo.imageInfo.tiles.map(function (tile) {\n      return tile.scaleFactors;\n    })[0],\n    supports: [...levelProfile.supports, ...profileSupports],\n    formats: [...levelProfile.formats, ...profileFormats],\n    qualities: [...levelProfile.qualities, ...profileQualities]\n  };\n}\n\nfunction generateVersion3Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n        formats = iiifInfo.imageInfo.extraFormats === undefined ? levelProfile.formats : [...levelProfile.formats, ...iiifInfo.imageInfo.extraFormats],\n        preferredFormat = iiifInfo.imageInfo.preferredFormats !== undefined && Array.isArray(iiifInfo.imageInfo.preferredFormats) && iiifInfo.imageInfo.preferredFormats.length > 0 ? iiifInfo.imageInfo.preferredFormats.filter(function (format) {\n    return ['jpg', 'png', 'gif'].includes(format);\n  }).reduce(function (acc, format) {\n    return acc === undefined && formats.includes(format) ? format : acc;\n  }, undefined) : undefined;\n  return {\n    url: iiifInfo.imageInfo['id'],\n    sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n      return [size.width, size.height];\n    }),\n    tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [iiifInfo.imageInfo.tiles.map(function (tile) {\n      return tile.width;\n    })[0], iiifInfo.imageInfo.tiles.map(function (tile) {\n      return tile.height;\n    })[0]],\n    resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined : iiifInfo.imageInfo.tiles.map(function (tile) {\n      return tile.scaleFactors;\n    })[0],\n    supports: iiifInfo.imageInfo.extraFeatures === undefined ? levelProfile.supports : [...levelProfile.supports, ...iiifInfo.imageInfo.extraFeatures],\n    formats: formats,\n    qualities: iiifInfo.imageInfo.extraQualities === undefined ? levelProfile.qualities : [...levelProfile.qualities, ...iiifInfo.imageInfo.extraQualities],\n    preferredFormat: preferredFormat\n  };\n}\n\nconst versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\n\nclass IIIFInfo {\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   */\n  constructor(imageInfo) {\n    this.setImageInfo(imageInfo);\n  }\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   * @api\n   */\n\n\n  setImageInfo(imageInfo) {\n    if (typeof imageInfo == 'string') {\n      this.imageInfo = JSON.parse(imageInfo);\n    } else {\n      this.imageInfo = imageInfo;\n    }\n  }\n  /**\n   * @return {Versions} Major IIIF version.\n   * @api\n   */\n\n\n  getImageApiVersion() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n\n    let context = this.imageInfo['@context'] || 'ol-no-context';\n\n    if (typeof context == 'string') {\n      context = [context];\n    }\n\n    for (let i = 0; i < context.length; i++) {\n      switch (context[i]) {\n        case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n        case 'http://iiif.io/api/image/1/context.json':\n          return Versions.VERSION1;\n\n        case 'http://iiif.io/api/image/2/context.json':\n          return Versions.VERSION2;\n\n        case 'http://iiif.io/api/image/3/context.json':\n          return Versions.VERSION3;\n\n        case 'ol-no-context':\n          // Image API 1.0 has no '@context'\n          if (this.getComplianceLevelEntryFromProfile(Versions.VERSION1) && this.imageInfo.identifier) {\n            return Versions.VERSION1;\n          }\n\n          break;\n\n        default:\n      }\n    }\n\n    assert(false, 61);\n  }\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level as it appears in the IIIF image information\n   * response.\n   */\n\n\n  getComplianceLevelEntryFromProfile(version) {\n    if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n      return;\n    }\n\n    if (version === undefined) {\n      version = this.getImageApiVersion();\n    }\n\n    switch (version) {\n      case Versions.VERSION1:\n        if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n\n        break;\n\n      case Versions.VERSION3:\n        if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n\n        break;\n\n      case Versions.VERSION2:\n        if (typeof this.imageInfo.profile === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n\n        if (Array.isArray(this.imageInfo.profile) && this.imageInfo.profile.length > 0 && typeof this.imageInfo.profile[0] === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])) {\n          return this.imageInfo.profile[0];\n        }\n\n        break;\n\n      default:\n    }\n  }\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n   */\n\n\n  getComplianceLevelFromProfile(version) {\n    const complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n\n    if (complianceLevel === undefined) {\n      return undefined;\n    }\n\n    const level = complianceLevel.match(/level[0-2](?:\\.json)?$/g);\n    return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n  }\n  /**\n   * @return {SupportedFeatures} Image formats, qualities and region / size calculation\n   * methods that are supported by the IIIF service.\n   */\n\n\n  getComplianceLevelSupportedFeatures() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n\n    const version = this.getImageApiVersion();\n    const level = this.getComplianceLevelFromProfile(version);\n\n    if (level === undefined) {\n      return IIIF_PROFILE_VALUES['none']['none'];\n    }\n\n    return IIIF_PROFILE_VALUES[version][level];\n  }\n  /**\n   * @param {PreferredOptions} [preferredOptions] Optional options for preferred format and quality.\n   * @return {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n   * @api\n   */\n\n\n  getTileSourceOptions(preferredOptions) {\n    const options = preferredOptions || {},\n          version = this.getImageApiVersion();\n\n    if (version === undefined) {\n      return;\n    }\n\n    const imageOptions = version === undefined ? undefined : versionFunctions[version](this);\n\n    if (imageOptions === undefined) {\n      return;\n    }\n\n    return {\n      url: imageOptions.url,\n      version: version,\n      size: [this.imageInfo.width, this.imageInfo.height],\n      sizes: imageOptions.sizes,\n      format: options.format !== undefined && imageOptions.formats.includes(options.format) ? options.format : imageOptions.preferredFormat !== undefined ? imageOptions.preferredFormat : 'jpg',\n      supports: imageOptions.supports,\n      quality: options.quality && imageOptions.qualities.includes(options.quality) ? options.quality : imageOptions.qualities.includes('native') ? 'native' : 'default',\n      resolutions: Array.isArray(imageOptions.resolutions) ? imageOptions.resolutions.sort(function (a, b) {\n        return b - a;\n      }) : undefined,\n      tileSize: imageOptions.tileSize\n    };\n  }\n\n}\n\nexport default IIIFInfo;","map":{"version":3,"names":["assert","Versions","VERSION1","VERSION2","VERSION3","IIIF_PROFILE_VALUES","supports","formats","qualities","COMPLIANCE_VERSION1","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","generateVersion1Options","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","undefined","url","imageInfo","replace","resolutions","scale_factors","tileSize","tile_width","tile_height","generateVersion2Options","additionalProfile","Array","isArray","profile","length","profileSupports","profileFormats","profileQualities","sizes","map","size","width","height","tiles","tile","scaleFactors","generateVersion3Options","extraFormats","preferredFormat","preferredFormats","filter","format","includes","reduce","acc","extraFeatures","extraQualities","versionFunctions","IIIFInfo","constructor","setImageInfo","JSON","parse","getImageApiVersion","context","i","getComplianceLevelEntryFromProfile","identifier","version","test","getComplianceLevelFromProfile","complianceLevel","level","match","getTileSourceOptions","preferredOptions","options","imageOptions","quality","sort","a","b"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/ol/format/IIIFInfo.js"],"sourcesContent":["/**\n * @module ol/format/IIIFInfo\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n\n/**\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile|Object<string, number>|TileInfo>>}\n *    ImageInformationResponse\n */\n\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nexport const Versions = {\n  VERSION1: 'version1',\n  VERSION2: 'version2',\n  VERSION3: 'version3',\n};\n\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nconst IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n  'level0': {\n    supports: [],\n    formats: [],\n    qualities: ['native'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['native'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['native', 'color', 'grey', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByDistortedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionSquare',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default'],\n  },\n};\nIIIF_PROFILE_VALUES['none'] = {\n  'none': {\n    supports: [],\n    formats: [],\n    qualities: [],\n  },\n};\n\nconst COMPLIANCE_VERSION1 =\n  /^https?:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(?:1\\.1\\/)?compliance\\.html#level[0-2]$/;\nconst COMPLIANCE_VERSION2 =\n  /^https?:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](?:\\.json)?$/;\nconst COMPLIANCE_VERSION3 =\n  /(^https?:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](?:\\.json)?$)|(^level[0-2]$)/;\n\nfunction generateVersion1Options(iiifInfo) {\n  let levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n  // Version 1.0 and 1.1 do not require a profile.\n  if (levelProfile === undefined) {\n    levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n  }\n  return {\n    url:\n      iiifInfo.imageInfo['@id'] === undefined\n        ? undefined\n        : iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    supports: levelProfile.supports,\n    formats: [\n      ...levelProfile.formats,\n      iiifInfo.imageInfo.formats === undefined\n        ? []\n        : iiifInfo.imageInfo.formats,\n    ],\n    qualities: [\n      ...levelProfile.qualities,\n      iiifInfo.imageInfo.qualities === undefined\n        ? []\n        : iiifInfo.imageInfo.qualities,\n    ],\n    resolutions: iiifInfo.imageInfo.scale_factors,\n    tileSize:\n      iiifInfo.imageInfo.tile_width !== undefined\n        ? iiifInfo.imageInfo.tile_height !== undefined\n          ? [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height]\n          : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]\n        : iiifInfo.imageInfo.tile_height != undefined\n        ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height]\n        : undefined,\n  };\n}\n\nfunction generateVersion2Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    additionalProfile =\n      Array.isArray(iiifInfo.imageInfo.profile) &&\n      iiifInfo.imageInfo.profile.length > 1,\n    profileSupports =\n      additionalProfile && iiifInfo.imageInfo.profile[1].supports\n        ? iiifInfo.imageInfo.profile[1].supports\n        : [],\n    profileFormats =\n      additionalProfile && iiifInfo.imageInfo.profile[1].formats\n        ? iiifInfo.imageInfo.profile[1].formats\n        : [],\n    profileQualities =\n      additionalProfile && iiifInfo.imageInfo.profile[1].qualities\n        ? iiifInfo.imageInfo.profile[1].qualities\n        : [];\n  return {\n    url: iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height === undefined ? tile.width : tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports: [...levelProfile.supports, ...profileSupports],\n    formats: [...levelProfile.formats, ...profileFormats],\n    qualities: [...levelProfile.qualities, ...profileQualities],\n  };\n}\n\nfunction generateVersion3Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    formats =\n      iiifInfo.imageInfo.extraFormats === undefined\n        ? levelProfile.formats\n        : [...levelProfile.formats, ...iiifInfo.imageInfo.extraFormats],\n    preferredFormat =\n      iiifInfo.imageInfo.preferredFormats !== undefined &&\n      Array.isArray(iiifInfo.imageInfo.preferredFormats) &&\n      iiifInfo.imageInfo.preferredFormats.length > 0\n        ? iiifInfo.imageInfo.preferredFormats\n            .filter(function (format) {\n              return ['jpg', 'png', 'gif'].includes(format);\n            })\n            .reduce(function (acc, format) {\n              return acc === undefined && formats.includes(format)\n                ? format\n                : acc;\n            }, undefined)\n        : undefined;\n  return {\n    url: iiifInfo.imageInfo['id'],\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports:\n      iiifInfo.imageInfo.extraFeatures === undefined\n        ? levelProfile.supports\n        : [...levelProfile.supports, ...iiifInfo.imageInfo.extraFeatures],\n    formats: formats,\n    qualities:\n      iiifInfo.imageInfo.extraQualities === undefined\n        ? levelProfile.qualities\n        : [...levelProfile.qualities, ...iiifInfo.imageInfo.extraQualities],\n    preferredFormat: preferredFormat,\n  };\n}\n\nconst versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nclass IIIFInfo {\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   */\n  constructor(imageInfo) {\n    this.setImageInfo(imageInfo);\n  }\n\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   * @api\n   */\n  setImageInfo(imageInfo) {\n    if (typeof imageInfo == 'string') {\n      this.imageInfo = JSON.parse(imageInfo);\n    } else {\n      this.imageInfo = imageInfo;\n    }\n  }\n\n  /**\n   * @return {Versions} Major IIIF version.\n   * @api\n   */\n  getImageApiVersion() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    let context = this.imageInfo['@context'] || 'ol-no-context';\n    if (typeof context == 'string') {\n      context = [context];\n    }\n    for (let i = 0; i < context.length; i++) {\n      switch (context[i]) {\n        case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n        case 'http://iiif.io/api/image/1/context.json':\n          return Versions.VERSION1;\n        case 'http://iiif.io/api/image/2/context.json':\n          return Versions.VERSION2;\n        case 'http://iiif.io/api/image/3/context.json':\n          return Versions.VERSION3;\n        case 'ol-no-context':\n          // Image API 1.0 has no '@context'\n          if (\n            this.getComplianceLevelEntryFromProfile(Versions.VERSION1) &&\n            this.imageInfo.identifier\n          ) {\n            return Versions.VERSION1;\n          }\n          break;\n        default:\n      }\n    }\n    assert(false, 61);\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level as it appears in the IIIF image information\n   * response.\n   */\n  getComplianceLevelEntryFromProfile(version) {\n    if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n      return;\n    }\n    if (version === undefined) {\n      version = this.getImageApiVersion();\n    }\n    switch (version) {\n      case Versions.VERSION1:\n        if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION3:\n        if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION2:\n        if (\n          typeof this.imageInfo.profile === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile)\n        ) {\n          return this.imageInfo.profile;\n        }\n        if (\n          Array.isArray(this.imageInfo.profile) &&\n          this.imageInfo.profile.length > 0 &&\n          typeof this.imageInfo.profile[0] === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])\n        ) {\n          return this.imageInfo.profile[0];\n        }\n        break;\n      default:\n    }\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n   */\n  getComplianceLevelFromProfile(version) {\n    const complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n    if (complianceLevel === undefined) {\n      return undefined;\n    }\n    const level = complianceLevel.match(/level[0-2](?:\\.json)?$/g);\n    return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n  }\n\n  /**\n   * @return {SupportedFeatures} Image formats, qualities and region / size calculation\n   * methods that are supported by the IIIF service.\n   */\n  getComplianceLevelSupportedFeatures() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    const version = this.getImageApiVersion();\n    const level = this.getComplianceLevelFromProfile(version);\n    if (level === undefined) {\n      return IIIF_PROFILE_VALUES['none']['none'];\n    }\n    return IIIF_PROFILE_VALUES[version][level];\n  }\n\n  /**\n   * @param {PreferredOptions} [preferredOptions] Optional options for preferred format and quality.\n   * @return {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n   * @api\n   */\n  getTileSourceOptions(preferredOptions) {\n    const options = preferredOptions || {},\n      version = this.getImageApiVersion();\n    if (version === undefined) {\n      return;\n    }\n    const imageOptions =\n      version === undefined ? undefined : versionFunctions[version](this);\n    if (imageOptions === undefined) {\n      return;\n    }\n    return {\n      url: imageOptions.url,\n      version: version,\n      size: [this.imageInfo.width, this.imageInfo.height],\n      sizes: imageOptions.sizes,\n      format:\n        options.format !== undefined &&\n        imageOptions.formats.includes(options.format)\n          ? options.format\n          : imageOptions.preferredFormat !== undefined\n          ? imageOptions.preferredFormat\n          : 'jpg',\n      supports: imageOptions.supports,\n      quality:\n        options.quality && imageOptions.qualities.includes(options.quality)\n          ? options.quality\n          : imageOptions.qualities.includes('native')\n          ? 'native'\n          : 'default',\n      resolutions: Array.isArray(imageOptions.resolutions)\n        ? imageOptions.resolutions.sort(function (a, b) {\n            return b - a;\n          })\n        : undefined,\n      tileSize: imageOptions.tileSize,\n    };\n  }\n}\n\nexport default IIIFInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}