{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\81806\\\\Documents\\\\work\\\\GIS_APP\\\\gis_app1\\\\src\\\\Map\\\\MapPane.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react'; // OpenLayers読み込み\n\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport { fromLonLat } from 'ol/proj';\nimport OlSourceOSM from \"ol/source/OSM\";\nimport 'ol/ol.css';\nimport './MapPane.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MapPane = () => {\n  _s();\n\n  const mapRef = useRef();\n  const [map, setMap] = useState(null); // on component mount\n\n  useEffect(() => {\n    let options = {\n      view: new View({\n        center: fromLonLat([139.767, 35.681]),\n        zoom: 14\n      }),\n      layers: [new TileLayer({\n        source: new OlSourceOSM()\n      })]\n    };\n    let mapObject = new Map(options);\n    mapObject.setTarget(mapRef.current);\n    setMap(mapObject);\n    return () => mapObject.setTarget(undefined);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'map',\n    ref: mapRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MapPane, \"gz7FVhQpqUQE1kI55tU/qLK0j6o=\");\n\n_c = MapPane;\nexport default MapPane;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapPane\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Map","View","TileLayer","fromLonLat","OlSourceOSM","MapPane","mapRef","map","setMap","options","view","center","zoom","layers","source","mapObject","setTarget","current","undefined"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/src/Map/MapPane.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n// OpenLayers読み込み\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport OlSourceOSM from \"ol/source/OSM\";\r\n\r\nimport 'ol/ol.css';\r\nimport './MapPane.css';\r\n\r\nconst MapPane = () => {\r\n  const mapRef = useRef();\r\n\r\n  const [map,setMap] = useState(null);\r\n\r\n  // on component mount\r\n    useEffect(() => {\r\n       let options = {\r\n         view: new View({\r\n           center: fromLonLat([139.767, 35.681]),\r\n           zoom: 14,\r\n         }),\r\n         layers: [\r\n           new TileLayer({\r\n            source: new OlSourceOSM(),\r\n           }),\r\n        ],\r\n       };\r\n        let mapObject = new Map(options);\r\n        mapObject.setTarget(mapRef.current);\r\n        setMap(mapObject);\r\n\r\n        return () => mapObject.setTarget(undefined);\r\n    }, []);\r\n\r\n    return (\r\n      <div className={'map'} ref={mapRef} />\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default MapPane;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD,C,CACA;;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,WAAP;AACA,OAAO,eAAP;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAMC,MAAM,GAAGR,MAAM,EAArB;EAEA,MAAM,CAACS,GAAD,EAAKC,MAAL,IAAeT,QAAQ,CAAC,IAAD,CAA7B,CAHoB,CAKpB;;EACEF,SAAS,CAAC,MAAM;IACb,IAAIY,OAAO,GAAG;MACZC,IAAI,EAAE,IAAIT,IAAJ,CAAS;QACbU,MAAM,EAAER,UAAU,CAAC,CAAC,OAAD,EAAU,MAAV,CAAD,CADL;QAEbS,IAAI,EAAE;MAFO,CAAT,CADM;MAKZC,MAAM,EAAE,CACN,IAAIX,SAAJ,CAAc;QACbY,MAAM,EAAE,IAAIV,WAAJ;MADK,CAAd,CADM;IALI,CAAd;IAWC,IAAIW,SAAS,GAAG,IAAIf,GAAJ,CAAQS,OAAR,CAAhB;IACAM,SAAS,CAACC,SAAV,CAAoBV,MAAM,CAACW,OAA3B;IACAT,MAAM,CAACO,SAAD,CAAN;IAEA,OAAO,MAAMA,SAAS,CAACC,SAAV,CAAoBE,SAApB,CAAb;EACH,CAjBQ,EAiBN,EAjBM,CAAT;EAmBA,oBACE;IAAK,SAAS,EAAE,KAAhB;IAAuB,GAAG,EAAEZ;EAA5B;IAAA;IAAA;IAAA;EAAA,QADF;AAKH,CA9BD;;GAAMD,O;;KAAAA,O;AAgCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}