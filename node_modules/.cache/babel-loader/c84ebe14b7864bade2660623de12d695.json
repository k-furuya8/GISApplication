{"ast":null,"code":"/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\n\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this.rotateWithView_ = options.rotateWithView;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.rotation_ = options.rotation;\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n\n    this.scale_ = options.scale;\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n\n    this.scaleArray_ = toSize(options.scale);\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n\n    this.displacement_ = options.displacement;\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n\n    this.declutterMode_ = options.declutterMode;\n  }\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n\n\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode()\n    });\n  }\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n\n\n  getOpacity() {\n    return this.opacity_;\n  }\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n\n\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n\n\n  getRotation() {\n    return this.rotation_;\n  }\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n\n\n  getScale() {\n    return this.scale_;\n  }\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n\n\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n\n\n  getDisplacement() {\n    return this.displacement_;\n  }\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n\n\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n\n\n  getAnchor() {\n    return abstract();\n  }\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n\n\n  getImage(pixelRatio) {\n    return abstract();\n  }\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n\n\n  getHitDetectionImage() {\n    return abstract();\n  }\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n\n\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n\n\n  getImageState() {\n    return abstract();\n  }\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n\n\n  getImageSize() {\n    return abstract();\n  }\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n\n\n  getOrigin() {\n    return abstract();\n  }\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n\n\n  getSize() {\n    return abstract();\n  }\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n\n\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n\n\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n\n\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n\n\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n\n\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n\n\n  listenImageChange(listener) {\n    abstract();\n  }\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n\n\n  load() {\n    abstract();\n  }\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n\n\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n}\n\nexport default ImageStyle;","map":{"version":3,"names":["abstract","toSize","ImageStyle","constructor","options","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","rotation","scale_","scale","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","clone","getScale","getOpacity","Array","isArray","slice","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","listener","load","unlistenImageChange"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/ol/style/Image.js"],"sourcesContent":["/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}