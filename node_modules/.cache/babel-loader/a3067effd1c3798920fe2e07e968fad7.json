{"ast":null,"code":"/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\n\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n\n    this.maxExtent_ = maxExtent;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.resolution_ = resolution;\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n\n    this.buildersByZIndex_ = {};\n  }\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n\n\n  finish() {\n    const builderInstructions = {};\n\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n\n    return builderInstructions;\n  }\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n\n\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n\n    let replay = replays[builderType];\n\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n      replays[builderType] = replay;\n    }\n\n    return replay;\n  }\n\n}\n\nexport default BuilderGroup;","map":{"version":3,"names":["Builder","ImageBuilder","LineStringBuilder","PolygonBuilder","TextBuilder","BATCH_CONSTRUCTORS","BuilderGroup","constructor","tolerance","maxExtent","resolution","pixelRatio","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","finish","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","zIndex","builderType","zIndexKey","undefined","toString","replays","replay","Constructor"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/ol/render/canvas/BuilderGroup.js"],"sourcesContent":["/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n"],"mappings":"AAAA;AACA;AACA;AAEA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA;AACA;AACA;;AACA,MAAMC,kBAAkB,GAAG;EACzB,UAAUF,cADe;EAEzB,WAAWH,OAFc;EAGzB,SAASC,YAHgB;EAIzB,cAAcC,iBAJW;EAKzB,WAAWC,cALc;EAMzB,QAAQC;AANiB,CAA3B;;AASA,MAAME,YAAN,CAAmB;EACjB;AACF;AACA;AACA;AACA;AACA;EACEC,WAAW,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+C;IACxD;AACJ;AACA;AACA;IACI,KAAKC,UAAL,GAAkBJ,SAAlB;IAEA;AACJ;AACA;AACA;;IACI,KAAKK,UAAL,GAAkBJ,SAAlB;IAEA;AACJ;AACA;AACA;;IACI,KAAKK,WAAL,GAAmBH,UAAnB;IAEA;AACJ;AACA;AACA;;IACI,KAAKI,WAAL,GAAmBL,UAAnB;IAEA;AACJ;AACA;AACA;;IACI,KAAKM,iBAAL,GAAyB,EAAzB;EACD;EAED;AACF;AACA;;;EACEC,MAAM,GAAG;IACP,MAAMC,mBAAmB,GAAG,EAA5B;;IACA,KAAK,MAAMC,IAAX,IAAmB,KAAKH,iBAAxB,EAA2C;MACzCE,mBAAmB,CAACC,IAAD,CAAnB,GAA4BD,mBAAmB,CAACC,IAAD,CAAnB,IAA6B,EAAzD;MACA,MAAMC,QAAQ,GAAG,KAAKJ,iBAAL,CAAuBG,IAAvB,CAAjB;;MACA,KAAK,MAAME,UAAX,IAAyBD,QAAzB,EAAmC;QACjC,MAAME,kBAAkB,GAAGF,QAAQ,CAACC,UAAD,CAAR,CAAqBJ,MAArB,EAA3B;QACAC,mBAAmB,CAACC,IAAD,CAAnB,CAA0BE,UAA1B,IAAwCC,kBAAxC;MACD;IACF;;IACD,OAAOJ,mBAAP;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEK,UAAU,CAACC,MAAD,EAASC,WAAT,EAAsB;IAC9B,MAAMC,SAAS,GAAGF,MAAM,KAAKG,SAAX,GAAuBH,MAAM,CAACI,QAAP,EAAvB,GAA2C,GAA7D;IACA,IAAIC,OAAO,GAAG,KAAKb,iBAAL,CAAuBU,SAAvB,CAAd;;IACA,IAAIG,OAAO,KAAKF,SAAhB,EAA2B;MACzBE,OAAO,GAAG,EAAV;MACA,KAAKb,iBAAL,CAAuBU,SAAvB,IAAoCG,OAApC;IACD;;IACD,IAAIC,MAAM,GAAGD,OAAO,CAACJ,WAAD,CAApB;;IACA,IAAIK,MAAM,KAAKH,SAAf,EAA0B;MACxB,MAAMI,WAAW,GAAG1B,kBAAkB,CAACoB,WAAD,CAAtC;MACAK,MAAM,GAAG,IAAIC,WAAJ,CACP,KAAKnB,UADE,EAEP,KAAKC,UAFE,EAGP,KAAKE,WAHE,EAIP,KAAKD,WAJE,CAAT;MAMAe,OAAO,CAACJ,WAAD,CAAP,GAAuBK,MAAvB;IACD;;IACD,OAAOA,MAAP;EACD;;AA/EgB;;AAkFnB,eAAexB,YAAf"},"metadata":{},"sourceType":"module"}