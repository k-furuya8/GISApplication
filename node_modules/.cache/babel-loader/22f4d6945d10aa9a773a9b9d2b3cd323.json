{"ast":null,"code":"/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport { apply, compose, create } from '../../transform.js';\nimport { getHeight, getWidth, isEmpty, scaleFromCenter } from '../../extent.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\n\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.layerImageRatio_ = layer.getImageRatio();\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.coordinateToVectorPixelTransform_ = create();\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n  /**\n   * Clean up.\n   */\n\n\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n\n\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return new Promise(resolve => resolve([]));\n    }\n\n    const vectorPixel = apply(this.coordinateToVectorPixelTransform_, apply(this.renderedPixelToCoordinateTransform_, pixel.slice()));\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n\n\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n\n\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      context.globalAlpha = layerState.opacity;\n      const imageLayerState = Object.assign({}, layerState, {\n        opacity: 1\n      });\n      const imageFrameState =\n      /** @type {import(\"../../Map.js\").FrameState} */\n      Object.assign({}, frameState, {\n        declutterTree: new RBush(9),\n        extent: renderedExtent,\n        size: [width, height],\n        viewState:\n        /** @type {import(\"../../View.js\").State} */\n        Object.assign({}, frameState.viewState, {\n          rotation: 0\n        }),\n        layerStatesArray: [imageLayerState],\n        layerIndex: 0\n      });\n      let emptyImage = true;\n      const image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function (callback) {\n        if (vectorRenderer.prepareFrame(imageFrameState) && vectorRenderer.replayGroupChanged) {\n          vectorRenderer.clipping = false;\n\n          if (vectorRenderer.renderFrame(imageFrameState, null)) {\n            vectorRenderer.renderDeclutter(imageFrameState);\n            emptyImage = false;\n          }\n\n          callback();\n        }\n      });\n      image.addEventListener(EventType.CHANGE, function () {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n\n        this.image_ = emptyImage ? null : image;\n        const imageResolution = image.getResolution();\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(this.coordinateToVectorPixelTransform_, width / 2, height / 2, 1 / renderedResolution, -1 / renderedResolution, 0, -viewState.center[0], -viewState.center[1]);\n      }.bind(this));\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ = frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n  /**\n   */\n\n\n  preRender() {}\n  /**\n   */\n\n\n  postRender() {}\n  /**\n   */\n\n\n  renderDeclutter() {}\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n\n\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, matches) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, matches);\n    } else {\n      return super.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, matches);\n    }\n  }\n\n}\n\nexport default CanvasVectorImageLayerRenderer;","map":{"version":3,"names":["CanvasImageLayerRenderer","CanvasVectorLayerRenderer","EventType","ImageCanvas","ImageState","RBush","ViewHint","apply","compose","create","getHeight","getWidth","isEmpty","scaleFromCenter","CanvasVectorImageLayerRenderer","constructor","layer","vectorRenderer_","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","disposeInternal","dispose","getFeatures","pixel","Promise","resolve","vectorPixel","slice","handleFontsChanged","prepareFrame","frameState","pixelRatio","viewState","viewResolution","resolution","hints","viewHints","vectorRenderer","renderedExtent","extent","width","height","ANIMATING","INTERACTING","useContainer","context","layerState","layerStatesArray","layerIndex","globalAlpha","opacity","imageLayerState","Object","assign","imageFrameState","declutterTree","size","rotation","emptyImage","image","canvas","callback","replayGroupChanged","clipping","renderFrame","renderDeclutter","addEventListener","CHANGE","getState","LOADED","image_","imageResolution","getResolution","imagePixelRatio","getPixelRatio","renderedResolution","center","bind","load","pixelToCoordinateTransform","preRender","postRender","forEachFeatureAtCoordinate","coordinate","hitTolerance","matches"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/ol/renderer/canvas/VectorImageLayer.js"],"sourcesContent":["/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      context.globalAlpha = layerState.opacity;\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          declutterTree: new RBush(9),\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n        })\n      );\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(\n        EventType.CHANGE,\n        function () {\n          if (image.getState() !== ImageState.LOADED) {\n            return;\n          }\n          this.image_ = emptyImage ? null : image;\n          const imageResolution = image.getResolution();\n          const imagePixelRatio = image.getPixelRatio();\n          const renderedResolution =\n            (imageResolution * pixelRatio) / imagePixelRatio;\n          this.renderedResolution = renderedResolution;\n          this.coordinateToVectorPixelTransform_ = compose(\n            this.coordinateToVectorPixelTransform_,\n            width / 2,\n            height / 2,\n            1 / renderedResolution,\n            -1 / renderedResolution,\n            0,\n            -viewState.center[0],\n            -viewState.center[1]\n          );\n        }.bind(this)\n      );\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    } else {\n      return super.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}