{"ast":null,"code":"const indexOfMatch = require(\"./index-of-match.js\");\n\nconst indexOfMatchEnd = require(\"./index-of-match-end.js\");\n\nconst countSubstring = require(\"./count-substring.js\");\n\nfunction findTagByName(xml, tagName, options) {\n  const debug = options && options.debug || false;\n  const nested = !(options && typeof options.nested === false);\n  const startIndex = options && options.startIndex || 0;\n  if (debug) console.log(\"[xml-utils] starting findTagByName with\", tagName, \" and \", options);\n  const start = indexOfMatch(xml, `\\<${tagName}[ \\>\\/]`, startIndex);\n  if (debug) console.log(\"[xml-utils] start:\", start);\n  if (start === -1) return undefined;\n  const afterStart = xml.slice(start + tagName.length);\n  let relativeEnd = indexOfMatchEnd(afterStart, \"^[^<]*[ /]>\", 0);\n  const selfClosing = relativeEnd !== -1 && afterStart[relativeEnd - 1] === \"/\";\n  if (debug) console.log(\"[xml-utils] selfClosing:\", selfClosing);\n\n  if (selfClosing === false) {\n    // check if tag has subtags with the same name\n    if (nested) {\n      let startIndex = 0;\n      let openings = 1;\n      let closings = 0;\n\n      while ((relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", startIndex)) !== -1) {\n        const clip = afterStart.substring(startIndex, relativeEnd + 1);\n        openings += countSubstring(clip, \"<\" + tagName);\n        closings += countSubstring(clip, \"/\" + tagName + \">\"); // we can't have more openings than closings\n\n        if (closings >= openings) break;\n        startIndex = relativeEnd;\n      }\n    } else {\n      relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", 0);\n    }\n  }\n\n  const end = start + tagName.length + relativeEnd + 1;\n  if (debug) console.log(\"[xml-utils] end:\", end);\n  if (end === -1) return undefined;\n  const outer = xml.slice(start, end); // tag is like <gml:identifier codeSpace=\"OGP\">urn:ogc:def:crs:EPSG::32617</gml:identifier>\n\n  let inner;\n\n  if (selfClosing) {\n    inner = null;\n  } else {\n    inner = outer.slice(outer.indexOf(\">\") + 1, outer.lastIndexOf(\"<\"));\n  }\n\n  return {\n    inner,\n    outer,\n    start,\n    end\n  };\n}\n\nmodule.exports = findTagByName;\nmodule.exports.default = findTagByName;","map":{"version":3,"names":["indexOfMatch","require","indexOfMatchEnd","countSubstring","findTagByName","xml","tagName","options","debug","nested","startIndex","console","log","start","undefined","afterStart","slice","length","relativeEnd","selfClosing","openings","closings","clip","substring","end","outer","inner","indexOf","lastIndexOf","module","exports","default"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/xml-utils/find-tag-by-name.js"],"sourcesContent":["const indexOfMatch = require(\"./index-of-match.js\");\nconst indexOfMatchEnd = require(\"./index-of-match-end.js\");\nconst countSubstring = require(\"./count-substring.js\");\n\nfunction findTagByName(xml, tagName, options) {\n  const debug = (options && options.debug) || false;\n  const nested = !(options && typeof options.nested === false);\n\n  const startIndex = (options && options.startIndex) || 0;\n\n  if (debug) console.log(\"[xml-utils] starting findTagByName with\", tagName, \" and \", options);\n\n  const start = indexOfMatch(xml, `\\<${tagName}[ \\>\\/]`, startIndex);\n  if (debug) console.log(\"[xml-utils] start:\", start);\n  if (start === -1) return undefined;\n\n  const afterStart = xml.slice(start + tagName.length);\n\n  let relativeEnd = indexOfMatchEnd(afterStart, \"^[^<]*[ /]>\", 0);\n\n  const selfClosing = relativeEnd !== -1 && afterStart[relativeEnd - 1] === \"/\";\n  if (debug) console.log(\"[xml-utils] selfClosing:\", selfClosing);\n\n  if (selfClosing === false) {\n    // check if tag has subtags with the same name\n    if (nested) {\n      let startIndex = 0;\n      let openings = 1;\n      let closings = 0;\n      while ((relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", startIndex)) !== -1) {\n        const clip = afterStart.substring(startIndex, relativeEnd + 1);\n        openings += countSubstring(clip, \"<\" + tagName);\n        closings += countSubstring(clip, \"/\" + tagName + \">\");\n        // we can't have more openings than closings\n        if (closings >= openings) break;\n        startIndex = relativeEnd;\n      }\n    } else {\n      relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", 0);\n    }\n  }\n\n  const end = start + tagName.length + relativeEnd + 1;\n  if (debug) console.log(\"[xml-utils] end:\", end);\n  if (end === -1) return undefined;\n\n  const outer = xml.slice(start, end);\n  // tag is like <gml:identifier codeSpace=\"OGP\">urn:ogc:def:crs:EPSG::32617</gml:identifier>\n\n  let inner;\n  if (selfClosing) {\n    inner = null;\n  } else {\n    inner = outer.slice(outer.indexOf(\">\") + 1, outer.lastIndexOf(\"<\"));\n  }\n\n  return { inner, outer, start, end };\n}\n\nmodule.exports = findTagByName;\nmodule.exports.default = findTagByName;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}