{"ast":null,"code":"/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport { mouseOnly, shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\n\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(\n    /** @type {import(\"./Pointer.js\").Options} */\n    options);\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.lastAngle_ = undefined;\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n\n    this.lastMagnitude_ = undefined;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.lastScaleDelta_ = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n\n\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n\n    this.lastAngle_ = theta;\n\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n\n    this.lastMagnitude_ = magnitude;\n  }\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n\n\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\nexport default DragRotateAndZoom;","map":{"version":3,"names":["PointerInteraction","mouseOnly","shiftKeyOnly","DragRotateAndZoom","constructor","options","condition_","condition","lastAngle_","undefined","lastMagnitude_","lastScaleDelta_","duration_","duration","handleDragEvent","mapBrowserEvent","map","size","getSize","offset","pixel","deltaX","deltaY","theta","Math","atan2","magnitude","sqrt","view","getView","angleDelta","adjustRotationInternal","adjustResolutionInternal","handleUpEvent","direction","endInteraction","handleDownEvent","beginInteraction"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/node_modules/ol/interaction/DragRotateAndZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotateAndZoom;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}