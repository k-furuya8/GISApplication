{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\81806\\\\Documents\\\\work\\\\GIS_APP\\\\gis_app1\\\\src\\\\TypeSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react'; //const typeRef = useRef();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TypeSelect = () => {\n  _s();\n\n  const [type, setType] = useState(\"point\");\n\n  const typeSet = e => {\n    setType(typeRef.current.value);\n  }; //const typeRef = typeRef(null);\n\n\n  let draw; // global so we can remove it later\n\n  function addInteraction() {\n    const value = type;\n\n    if (value !== 'None') {\n      draw = new Draw({\n        source: source,\n        type: type\n      });\n      map.addInteraction(draw);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      class: \"input-group-text\",\n      for: \"type\",\n      children: \"Geometry type:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      ref: typeRef,\n      value: type,\n      onChange: typeSet,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Point\",\n        children: \"Point\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"LineString\",\n        children: \"LineString\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Polygon\",\n        children: \"Polygon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Circle\",\n        children: \"Circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"None\",\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [type, \"aaaa\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TypeSelect, \"seFq26cmmrOhhGAr1vJimSmVYC0=\");\n\n_c = TypeSelect;\nexport default TypeSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeSelect\");","map":{"version":3,"names":["React","useState","useRef","TypeSelect","type","setType","typeSet","e","typeRef","current","value","draw","addInteraction","Draw","source","map"],"sources":["C:/Users/81806/Documents/work/GIS_APP/gis_app1/src/TypeSelect.js"],"sourcesContent":["import React, { useState, useRef } from 'react'\r\n\r\n\r\n\r\n//const typeRef = useRef();\r\n\r\n\r\n\r\nconst TypeSelect = () => {\r\n    const [type, setType] = useState(\"point\");\r\n\r\n    const typeSet = (e) => {\r\n        setType(typeRef.current.value);\r\n    }\r\n\r\n    //const typeRef = typeRef(null);\r\n\r\n    let draw; // global so we can remove it later\r\n    function addInteraction() {\r\n        const value = type;\r\n        if (value !== 'None') {\r\n            draw = new Draw({\r\n                source: source,\r\n                type: type,\r\n            });\r\n            map.addInteraction(draw);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <label class=\"input-group-text\" for=\"type\">Geometry type:</label>\r\n            <select ref={typeRef} value={type} onChange={typeSet}>\r\n                <option value=\"Point\">Point</option>\r\n                <option value=\"LineString\">LineString</option>\r\n                <option value=\"Polygon\">Polygon</option>\r\n                <option value=\"Circle\">Circle</option>\r\n                <option value=\"None\">None</option>\r\n            </select>\r\n            <label>{type}aaaa</label>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TypeSelect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC,C,CAIA;;;;AAIA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,OAAD,CAAhC;;EAEA,MAAMK,OAAO,GAAIC,CAAD,IAAO;IACnBF,OAAO,CAACG,OAAO,CAACC,OAAR,CAAgBC,KAAjB,CAAP;EACH,CAFD,CAHqB,CAOrB;;;EAEA,IAAIC,IAAJ,CATqB,CASX;;EACV,SAASC,cAAT,GAA0B;IACtB,MAAMF,KAAK,GAAGN,IAAd;;IACA,IAAIM,KAAK,KAAK,MAAd,EAAsB;MAClBC,IAAI,GAAG,IAAIE,IAAJ,CAAS;QACZC,MAAM,EAAEA,MADI;QAEZV,IAAI,EAAEA;MAFM,CAAT,CAAP;MAIAW,GAAG,CAACH,cAAJ,CAAmBD,IAAnB;IACH;EACJ;;EAID,oBACI;IAAA,wBACI;MAAO,KAAK,EAAC,kBAAb;MAAgC,GAAG,EAAC,MAApC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,GAAG,EAAEH,OAAb;MAAsB,KAAK,EAAEJ,IAA7B;MAAmC,QAAQ,EAAEE,OAA7C;MAAA,wBACI;QAAQ,KAAK,EAAC,OAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,KAAK,EAAC,YAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,KAAK,EAAC,SAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAQ,KAAK,EAAC,QAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAQ,KAAK,EAAC,MAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eASI;MAAA,WAAQF,IAAR;IAAA;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CArCD;;GAAMD,U;;KAAAA,U;AAuCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}